do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v74=0 + 0 ;local v75;while true do if ((0 -0)==v74) then v75=(v31/(((3029 -1390) -(1523 + 114))^(v32-((3 -1) -1))))%(((353 -(87 + 263)) -1)^(((v33-(2 -1)) -(v32-((1577 -(892 + 65)) -(555 + (244 -(67 + 113)))))) + (932 -(857 + 74)))) ;return v75-(v75%(569 -(367 + (479 -278)))) ;end end else local v76=(929 -(214 + 713))^(v32-(118 -(24 + 8 + 85))) ;return (((v31%(v76 + v76))>=v76) and (1 + 0)) or (0 + 0) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + (7 -(6 -2)) );v19=v19 + 3 + 0 + 1 ;return (v37 * (66680831 -49903615)) + (v36 * (66488 -(802 + 150))) + (v35 * (689 -433)) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=0 -0 ;local v39;local v40;local v41;local v42;local v43;local v44;while true do local v67=0;local v68;while true do if (v67~=0) then else v68=261 -(241 + 20) ;while true do if (v68==(0 -0)) then local v101=0;while true do if ((1 + 0)~=v101) then else v68=439 -(262 + 176) ;break;end if (v101==0) then if (v38==1) then local v112=1721 -(345 + 1376) ;while true do if (v112==(689 -(198 + 490))) then v44={};v38=2;break;end if (v112==0) then v42={v39,v40,nil,v41};v43=v24();v112=1207 -(696 + 510) ;end end end if (v38~=2) then else local v113=0;while true do if (v113~=(0 -0)) then else for v117=1263 -(1091 + 171) ,v43 do local v118=0;local v119;local v120;local v121;while true do if (v118==(1 + 0)) then v121=nil;while true do if (v119==(3 -2)) then if (v120==(3 -2)) then v121=v22()~=(374 -(123 + 251)) ;elseif (v120==(9 -7)) then v121=v25();elseif (v120==(701 -(208 + 490))) then v121=v26();end v44[v117]=v121;break;end if (v119==(0 + 0)) then v120=v22();v121=nil;v119=1 + 0 ;end end break;end if ((836 -(660 + 176))~=v118) then else v119=0;v120=nil;v118=1 + 0 ;end end end v42[205 -(14 + 188) ]=v22();v113=1;end if (v113==(676 -(534 + 141))) then for v122=1,v24() do local v123=0;local v124;local v125;local v126;local v127;while true do if (v123~=1) then else v126=nil;v127=nil;v123=2;end if (v123==(0 + 0)) then v124=0;v125=nil;v123=1;end if (v123==(2 + 0)) then while true do if (v124~=1) then else v127=nil;while true do if (v125==0) then v126=0 + 0 ;v127=nil;v125=1 -0 ;end if (v125~=1) then else while true do if (v126~=(0 -0)) then else v127=v22();if (v21(v127,2 -1 ,1)~=0) then else local v244=0 + 0 ;local v245;local v246;local v247;local v248;while true do if (v244~=(2 + 0)) then else while true do if (v245==(397 -(115 + 281))) then local v261=0 -0 ;while true do if ((0 + 0)==v261) then v248={v23(),v23(),nil,nil};if (v246==0) then local v276=0;local v277;while true do if (v276==(867 -(550 + 317))) then v277=0;while true do if (v277==0) then v248[3 -0 ]=v23();v248[4 -0 ]=v23();break;end end break;end end elseif (v246==(2 -1)) then v248[3]=v24();elseif (v246==(287 -(134 + 151))) then v248[3]=v24() -((1667 -(970 + 695))^(30 -14)) ;elseif (v246~=(1993 -(582 + 1408))) then else local v287=0;local v288;while true do if (v287~=(0 -0)) then else v288=0;while true do if (v288~=0) then else v248[3 -0 ]=v24() -(2^(60 -44)) ;v248[1828 -(1195 + 629) ]=v23();break;end end break;end end end v261=1 -0 ;end if (v261==(242 -(187 + 54))) then v245=2;break;end end end if (v245==(783 -(162 + 618))) then if (v21(v247,3,3 + 0 )==(1 + 0)) then v248[4]=v44[v248[8 -4 ]];end v39[v122]=v248;break;end if ((0 -0)~=v245) then else local v263=0 + 0 ;while true do if (v263~=(1636 -(1373 + 263))) then else v246=v21(v127,2,1003 -(451 + 549) );v247=v21(v127,2 + 2 ,9 -3 );v263=1 -0 ;end if (v263==1) then v245=1385 -(746 + 638) ;break;end end end if ((1 + 1)~=v245) then else if (v21(v247,1,1 -0 )~=(342 -(218 + 123))) then else v248[2]=v44[v248[2]];end if (v21(v247,2,1583 -(1535 + 46) )~=(1 + 0)) then else v248[1 + 2 ]=v44[v248[3]];end v245=3;end end break;end if (v244==(560 -(306 + 254))) then v245=0;v246=nil;v244=1;end if (v244~=1) then else local v256=0 + 0 ;while true do if (v256==(1 -0)) then v244=1469 -(899 + 568) ;break;end if (v256~=0) then else v247=nil;v248=nil;v256=1 + 0 ;end end end end end break;end end break;end end break;end if (v124==(0 -0)) then local v197=0;while true do if (v197==(604 -(268 + 335))) then v124=1;break;end if (v197~=0) then else v125=0;v126=nil;v197=291 -(60 + 230) ;end end end end break;end end end v38=3;break;end end end v101=573 -(426 + 146) ;end end end if (v68==1) then if (v38==(1 + 2)) then for v108=1,v24() do v40[v108-1 ]=v29();end for v110=1,v24() do v41[v110]=v24();end return v42;end if (v38~=(1456 -(282 + 1174))) then else local v104=0;local v105;while true do if (v104==(811 -(569 + 242))) then v105=0;while true do if (v105==0) then local v115=0 -0 ;while true do if (v115==1) then v105=1 + 0 ;break;end if (v115==(1024 -(706 + 318))) then v39={};v40={};v115=1252 -(721 + 530) ;end end end if (v105~=(1272 -(945 + 326))) then else v41={};v38=2 -1 ;break;end end break;end end end break;end end break;end end end end v30=nil;v18=7;end if (v18==4) then function v25()local v45=(982 -(18 + 964)) + 0 ;local v46;local v47;local v48;local v49;local v50;local v51;while true do if (0==v45) then v46=v24();v47=v24();v45=(1021 -(53 + 267)) -(271 + 429) ;end if ((2 + 0)==v45) then v50=v21(v47,(5725 -4204) -(1408 + 92) ,83 -52 );v51=((v21(v47,1118 -(461 + 625) )==(585 -(57 + 527))) and  -1) or (1289 -(993 + 295)) ;v45=(24 + 82) -(17 + 86) ;end if (v45==(1 + 2)) then if (v50==((678 + 493) -(418 + 753))) then if (v49==(0 -0)) then return v51 * 0 ;else v50=1 + 0 ;v48=0 + 0 + 0 ;end elseif (v50==((1449 -(20 + 830)) + 1448)) then return ((v49==(0 + 0)) and (v51 * ((530 -(406 + 123))/(1769 -(1749 + 20))))) or (v51 * NaN) ;end return v8(v51,v50-1023 ) * (v48 + (v49/((1 + 1)^(1374 -((1662 -(15 + 398)) + 73))))) ;end if (v45==(1 + 0)) then v48=1146 -(466 + 679) ;v49=(v21(v47,1258 -(1043 + 214) ,48 -28 ) * ((5 -3)^(1932 -(106 + 1794)))) + v46 ;v45=582 -(361 + 171 + 48) ;end end end v26=nil;function v26(v52)local v53=126 -(116 + 10) ;local v54;local v55;while true do if (v53==(1 + (7 -5))) then return v6(v55);end if (v53==2) then v55={};for v94=1, #v54 do v55[v94]=v2(v1(v3(v54,v94,v94)));end v53=741 -((1663 -(118 + 1003)) + 196) ;end if (v53==(0 -0)) then v54=nil;if  not v52 then local v96=0 + 0 ;while true do if (v96==((0 -0) + 0)) then v52=v24();if (v52==(0 + 0)) then return "";end break;end end end v53=(379 -(142 + 235)) -1 ;end if (v53==(2 -1)) then v54=v3(v16,v19,(v19 + v52) -(1552 -((5108 -3982) + 425)) );v19=v19 + v52 ;v53=407 -(118 + 287) ;end end end v18=5;end if (v18==2) then function v22()local v56=v1(v16,v19,v19);v19=v19 + 1 ;return v56;end v23=nil;function v23()local v57=0 + 0 ;local v58;local v59;while true do if (v57==(977 -(553 + 424))) then v58,v59=v1(v16,v19,v19 + 2 );v19=v19 + 2 ;v57=1 -0 ;end if (v57==(1 + 0 + 0)) then return (v59 * (254 + 2)) + v58 ;end end end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60)if (v1(v60,2)==79) then local v77=0;while true do if (v77==0) then v20=v0(v3(v60,1,1));return "";end end else local v78=0;local v79;while true do if (v78==0) then v79=v2(v0(v60,16));if v20 then local v102=0;local v103;while true do if (v102==1) then return v103;end if (v102==0) then v103=v5(v79,v20);v20=nil;v102=1;end end else return v79;end break;end end end end);v18=1;end if (v18==7) then function v30(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v12("#",...) -1 ;local function v73()local v80=v64;local v81=v65;local v82=v66;local v83=v28;local v84={};local v85={};local v86={};for v90=0,v72 do if (((488 + 659)>=((797 -(316 + 289)) + 143)) and (v90>=v82)) then v84[v90-v82 ]=v71[v90 + (2 -1) ];else v86[v90]=v71[v90 + (2 -1) ];end end local v87=(v72-v82) + (2 -1) ;local v88;local v89;while true do local v91=0 + 0 ;local v92;while true do if (((16600 -13165)>2097) and ((753 -(239 + (1345 -831)))==v91)) then v92=0 + 0 ;while true do if ((v92==(1330 -(797 + 532))) or ((2740 + 1030)>=4041)) then if ((v89<=17) or ((1279 + 2512)<=(3787 -2176))) then if ((v89<=8) or ((5780 -(373 + 829))<=2008)) then if (((1856 -(476 + 12 + 243))<=(3206 -(369 + 761))) and (v89<=(2 + 1))) then if ((v89<=1) or ((1349 -606)>=((9788 -(666 + 787)) -3936))) then if ((1155<(1911 -(64 + 174))) and (v89>(0 + 0))) then v86[v88[2 -0 ]][v88[339 -(144 + 192) ]]=v88[(645 -(360 + 65)) -(42 + 174) ];else for v176=v88[2 + 0 ],v88[3 + 0 ] do v86[v176]=nil;end end elseif ((v89==(1 + 1)) or (((3578 + 250) -(363 + 1141))<=578)) then v86[v88[1582 -(1183 + 397) ]]();else local v132=0 -0 ;local v133;while true do if ((3767==(2762 + 1005)) and ((0 + 0)==v132)) then v133=v88[1977 -(1913 + 62) ];do return v13(v86,v133,v133 + v88[2 + 1 ] );end break;end end end elseif (((10824 -6735)==4089) and (v89<=((2192 -(79 + 175)) -(565 + 1368)))) then if (((16765 -12307)>=(3335 -(1477 + 184))) and (v89>(5 -1))) then v86[v88[2]]=v88[3 + 0 ]~=(0 -0) ;else v86[v88[858 -(564 + 292) ]]=v88[4 -1 ];end elseif ((972<=((3335 + 938) -2855)) and (v89<=(310 -(244 + 60)))) then do return v86[v88[2 + 0 ]];end elseif ((v89>(21 -14)) or ((5414 -((78 -37) + 435))<(5763 -(938 + 63)))) then local v178=0 + 0 ;local v179;local v180;local v181;while true do if ((v178==0) or ((3629 -(936 + 189))>(1404 + 2860))) then local v205=0;while true do if ((2153==2153) and (v205==(1614 -(1565 + (947 -(503 + 396)))))) then v178=1;break;end if ((v205==(0 + 0)) or (((1826 -(92 + 89)) -((1516 -734) + 356))>=(2858 -(176 + 47 + 44)))) then v179=0 -0 ;v180=nil;v205=1 -0 ;end end end if ((((3299 + 2274) -(975 + 117))==(6356 -(157 + 1718))) and (v178==(1 + (0 -0)))) then v181=nil;while true do if ((v179==(3 -2)) or ((7958 -(770 + 4860))<693)) then for v233=2 -1 , #v85 do local v234=0;local v235;local v236;local v237;while true do if ((4328==(5346 -(697 + 321))) and (v234==((2 + 0) -(1 + 0)))) then v237=nil;while true do if ((1588>=(2821 -1489)) and (v235==(2 -1))) then while true do if ((v236==((0 -0) + 0)) or ((7820 -3646)>(11387 -(892 + 6247)))) then v237=v85[v233];for v271=(1870 -643) -(322 + 905) , #v237 do local v272=611 -(602 + 9) ;local v273;local v274;local v275;while true do if (((1190 -(449 + 740))==v272) or ((5458 -(826 + 46))<=((2273 -(485 + 759)) -(245 + (1624 -922))))) then v275=v273[1191 -(442 + 747) ];if (((12206 -8343)==(1242 + 2621)) and (v274==v86) and (v275>=v180)) then local v282=1898 -(260 + 1638) ;local v283;while true do if ((v282==(440 -(382 + (1193 -(832 + 303))))) or ((904 -622)<=(35 + 7))) then v283=0 -0 ;while true do if ((4609>=(2276 -1510)) and (v283==0)) then v181[v275]=v274[v275];v273[1206 -(902 + 303) ]=v181;break;end end break;end end end break;end if ((v272==(0 -0)) or ((2774 -1622)==(214 + (3220 -(88 + 858))))) then v273=v237[v271];v274=v273[(516 + 1175) -(928 + 193 + 569) ];v272=1;end end end break;end end break;end if (((3636 -(22 + 8 + 184))>(4033 -(483 + 200))) and (v235==((2252 -(766 + 23)) -(1404 + 59)))) then local v258=0;while true do if (((2399 -1522)>(505 -(636 -507))) and (v258==(766 -(468 + 297)))) then v235=563 -(334 + 228) ;break;end if ((v258==(0 -0)) or ((7227 -4109)<=(3356 -1505))) then v236=0 + (0 -0) ;v237=nil;v258=237 -(141 + 95) ;end end end end break;end if ((v234==(0 + 0)) or (165>=3492)) then v235=0 -0 ;v236=nil;v234=(4 -2) -1 ;end end end break;end if ((3949<4856) and (v179==((0 -0) + 0))) then local v227=0 -0 ;local v228;while true do if (((0 + 0)==v227) or (4276<(1571 + 1445))) then v228=0 -0 ;while true do if ((4690>(2434 + 1691)) and ((163 -(92 + 71))==v228)) then v180=v88[2];v181={};v228=1 + 0 ;end if ((v228==(1 -0)) or ((815 -(574 + 191))>=896)) then v179=1 + 0 ;break;end end break;end end end end break;end end else local v182=0;local v183;local v184;local v185;while true do if ((v182==(0 -0)) or (1714>=(1511 + 1447))) then v183=0;v184=nil;v182=850 -(254 + 595) ;end if ((v182==(127 -(55 + 71))) or ((1963 -472)<(2434 -(573 + 1217)))) then v185=nil;while true do if (((1777 -(1036 + 37))<(2733 -1746)) and (v183==(1 + 0 + 0))) then while true do if (((5990 -2272)>1906) and (v184==(939 -(714 + 225)))) then v185=v88[5 -3 ];v86[v185](v86[v185 + (1 -0) ]);break;end end break;end if ((v183==(0 + 0)) or ((1386 -428)>3635)) then v184=806 -(118 + 688) ;v185=nil;v183=1;end end break;end end end elseif (((3549 -(25 + 23))<=(871 + 3621)) and (v89<=12)) then if ((v89<=((3692 -1796) -(927 + 959))) or (((9127 + 2475) -8160)<(3280 -(16 + 716)))) then if (((5549 -2674)>=(1561 -(11 + 86))) and (v89>(21 -12))) then v86[v88[287 -(175 + (1590 -(641 + 839))) ]]=v63[v88[6 -3 ]];else v86[v88[9 -7 ]]=v86[v88[1799 -((1416 -(910 + 3)) + 1293) ]][v88[11 -7 ]];end elseif ((v89==11) or ((3470 + 1327)>=(5954 -(810 + 251)))) then v86[v88[2 + 0 ]][v88[3]]=v86[v88[2 + 2 ]];else v86[v88[2 + 0 ]]=v86[v88[536 -(43 + 490) ]] -v86[v88[737 -(711 + (55 -33)) ]] ;end elseif ((v89<=(53 -39)) or ((1410 -((1924 -(1466 + 218)) + 619))>(500 + 1568))) then if (((3362 -1248)>(63 + 881)) and (v89>((808 + 949) -(1344 + 400)))) then do return;end elseif ((v88[2]==v86[v88[4]]) or ((2667 -(255 + 150))>=(2439 + (1805 -(556 + 592))))) then v69=v69 + 1 + 0 ;else v69=v88[12 -9 ];end elseif ((v89<=(48 -33)) or ((3994 -(144 + 260 + 1335))>=(3943 -(183 + 223)))) then v86[v88[2 -0 ]]=v30(v81[v88[2 + 1 ]],nil,v63);elseif ((v89==(6 + 10)) or ((4174 -(10 + 327))<1306)) then if (((2055 + 895)==(3288 -(118 + 220))) and (v86[v88[(809 -(329 + 479)) + 1 ]]==v88[453 -(108 + 341) ])) then v69=v69 + 1 + 0 ;else v69=v88[12 -9 ];end elseif (v86[v88[1495 -(711 + 782) ]] or ((9054 -4331)<(3767 -(270 + 199)))) then v69=v69 + 1 + 0 ;else v69=v88[1822 -((1434 -(174 + 680)) + 1239) ];end elseif (((3376 -2240)>=(148 + 6)) and (v89<=(1 + 25))) then if ((v89<=21) or (((408 -289) + 152)>(12396 -7648))) then if (((2945 + 1795)>=(4319 -(645 + (1081 -559)))) and (v89<=(1809 -(1010 + 780)))) then if ((v89>(18 + 0)) or (2578>=(16149 -12759))) then v62[v88[8 -5 ]]=v86[v88[1838 -(1045 + 791) ]];else local v147=0 -0 ;local v148;local v149;local v150;local v151;while true do if (((62 -(15 + 6))<=1661) and (v147==(506 -(351 + 154)))) then v150=nil;v151=nil;v147=2;end if (((2175 -(1281 + 293))<(3826 -(28 + 238))) and (v147==(0 -0))) then v148=0;v149=nil;v147=1560 -(1381 + 178) ;end if (((221 + (753 -(396 + 343)))<(554 + 133)) and (v147==(1 + 1))) then while true do if (((15682 -11133)>(598 + 555)) and (v148==(471 -(381 + 89)))) then v151={};v150=v10({},{__index=function(v211,v212)local v213=0 + 0 ;local v214;while true do if ((v213==0) or ((3161 + 1513)<(8002 -3330))) then v214=v151[v212];return v214[1][v214[1158 -(1074 + 82) ]];end end end,__newindex=function(v215,v216,v217)local v218=0 -0 ;local v219;while true do if ((3668<(6345 -(214 + 1570))) and (v218==(1455 -(990 + 465)))) then v219=v151[v216];v219[1 + 0 ][v219[1 + 1 ]]=v217;break;end end end});v148=1 + (1478 -(29 + 1448)) ;end if ((v148==(0 + 0)) or ((1790 -(2724 -(135 + 1254)))==3605)) then local v206=1726 -(1668 + 58) ;while true do if ((v206==((2361 -1734) -(512 + 114))) or ((12433 -9770)==3312)) then v148=2 -1 ;break;end if ((4277<=(2983 + 1492)) and (0==v206)) then v149=v81[v88[5 -2 ]];v150=nil;v206=3 -2 ;end end end if ((v148==(1 + 1)) or ((2397 -(389 + 1138))==(223 + 966))) then for v220=1 + 0 ,v88[(587 -(102 + 472)) -9 ] do local v221=(1882 + 112) -(109 + 1885) ;local v222;local v223;while true do if (((3022 -(704 + 565 + 200))<=(6004 -2871)) and (v221==(816 -(98 + 717)))) then while true do if ((v222==(826 -(802 + 24))) or ((3857 -1620)>=(4434 -(861 + 62)))) then v69=v69 + 1 + 0 ;v223=v80[v69];v222=1;end if ((v222==1) or ((1018 + (1851 -(320 + 1225)))>(497 + (4491 -1968)))) then if ((v223[1 + 0 ]==((58 + 36) -60)) or (2992==(6272 -4391))) then v151[v220-(1 + 0) ]={v86,v223[3 + (1464 -(157 + 1307)) ]};else v151[v220-((1860 -(821 + 1038)) + 0) ]={v62,v223[1436 -(797 + (1586 -950)) ]};end v85[ #v85 + (4 -3) ]=v151;break;end end break;end if ((3106>(3145 -(1427 + 21 + 171))) and (v221==(0 + 0))) then v222=0 -0 ;v223=nil;v221=1;end end end v86[v88[2 + (0 -0) ]]=v30(v149,v150,v63);break;end end break;end end end elseif ((3023<3870) and (v89==(10 + 10))) then if (((469 -(192 + 134))>(1350 -(316 + 960))) and (v86[v88[2 + 0 ]]==v86[v88[4 + 0 ]])) then v69=v69 + 1 + 0 ;else v69=v88[11 -8 ];end else v86[v88[2]]=v62[v88[554 -(83 + 468) ]];end elseif ((18<(3918 -(1202 + 604))) and (v89<=(107 -84))) then if (((1825 -728)<=(4507 -2879)) and (v89>(347 -(17 + 28 + 280)))) then local v154=0 + 0 ;local v155;local v156;local v157;local v158;local v159;while true do if ((4630==4630) and (v154==0)) then v155=0 + 0 ;v156=nil;v154=1;end if (((1293 + 2247)>(1485 + 1198)) and (v154==((2 -1) + 0))) then v157=nil;v158=nil;v154=2;end if (((8876 -4082)>=3275) and (v154==(1913 -((1366 -(834 + 192)) + 1571)))) then v159=nil;while true do if ((1484==(586 + 898)) and (v155==(1772 -(1733 + 39)))) then v156=v88[(1 + 4) -3 ];v157,v158=v83(v86[v156](v13(v86,v156 + (1035 -(125 + 909)) ,v88[1951 -(1096 + 219 + 633) ])));v155=1 + 0 ;end if (((2044 -(14 + 598))<(3449 + 106)) and ((513 -(409 + 103))==v155)) then v70=(v158 + v156) -(237 -(46 + 190)) ;v159=95 -(51 + 44) ;v155=1 + 1 ;end if ((v155==(1319 -(1114 + 203))) or ((1791 -(228 + 498))>(776 + 2802))) then for v224=v156,v70 do local v225=0;local v226;while true do if ((v225==(0 + 0)) or ((5458 -(174 + 489))<(3665 -2258))) then v226=1905 -(830 + 1075) ;while true do if ((1853<(5337 -(303 + 221))) and (v226==(1269 -(231 + 1038)))) then v159=v159 + 1 + 0 ;v86[v224]=v157[v159];break;end end break;end end end break;end end break;end end else local v160=1162 -(171 + 991) ;local v161;while true do if ((v160==0) or (((18009 -6384) -8804)<(6527 -4096))) then v161=v88[4 -2 ];v86[v161]=v86[v161](v13(v86,v161 + 1 + 0 ,v70));break;end end end elseif ((v89<=24) or ((10074 -7200)<(2485 -(300 + 4)))) then v69=v88[3];elseif ((v89==(72 -47)) or (2689<=(552 -209))) then if ((v86[v88[6 -4 ]]~=v86[v88[4]]) or ((3117 -(111 + 1137))==(2167 -(91 + 67)))) then v69=v69 + (2 -(1 + 0)) ;else v69=v88[1 + 2 ];end else local v188=523 -(423 + 100) ;local v189;local v190;local v191;while true do if ((v188==((0 -0) + 0)) or (((10179 -(112 + 250)) -6271)<(1211 + 1111))) then v189=771 -(326 + 445) ;v190=nil;v188=4 -3 ;end if ((v188==((1 + 1) -1)) or ((4859 -(6956 -4179))==(5484 -(530 + 181)))) then v191=nil;while true do if (((4125 -(614 + 267))>((623 + 464) -(19 + 13))) and (v189==1)) then v86[v190 + (1 -0) ]=v191;v86[v190]=v191[v88[9 -(3 + 2) ]];break;end if ((v189==(0 -0)) or ((861 + 2452)<=1778)) then local v232=0 -0 ;while true do if ((v232==0) or ((2946 -1525)>=(3916 -(1293 + 519)))) then v190=v88[(3 + 0) -1 ];v191=v86[v88[7 -4 ]];v232=1 -0 ;end if (((7813 -6001)<=(7653 -4404)) and (v232==(1 + 0))) then v189=1 + 0 ;break;end end end end break;end end end elseif (((3770 -2147)<=(453 + 1504)) and (v89<=(10 + 20))) then if ((4412==(2758 + 1654)) and (v89<=(1124 -(709 + 387)))) then if ((((1789 + 1819) -(673 + 1185))>=(2441 -1599)) and (v89==(86 -59))) then local v163=0 -0 ;local v164;local v165;local v166;while true do if (((3128 + 1244)>(1383 + 467)) and (v163==(0 -0))) then v164=0;v165=nil;v163=1 + 0 ;end if (((462 -230)<(1611 -790)) and (v163==1)) then v166=nil;while true do if (((2398 -(446 + 1434))<((1624 + 561) -(1040 + 243))) and (v164==(1414 -(1001 + 413)))) then v165=0 -0 ;v166=nil;v164=(4120 -2272) -(559 + 1288) ;end if (((4925 -((1491 -(244 + 638)) + 1322))>858) and (v164==1)) then while true do if ((v165==(454 -(13 + 441))) or (((14724 -(627 + 66)) -10276)<=(2396 -1481))) then v166=v88[9 -7 ];v86[v166]=v86[v166](v13(v86,v166 + 1 ,v88[1 + 2 ]));break;end end break;end end break;end end else v63[v88[3]]=v86[v88[2]];end elseif (((14331 -10385)>(1330 + 2413)) and (v89==(13 + 16))) then if ( not v86[v88[(14 -9) -3 ]] or ((731 + 604)>=(6079 -2773))) then v69=v69 + 1 + 0 ;else v69=v88[2 + 1 ];end else local v169=0 + (602 -(512 + 90)) ;local v170;while true do if (((4068 + 776)>2253) and ((0 + (1906 -(1665 + 241)))==v169)) then v170=v88[719 -(373 + 344) ];v86[v170](v13(v86,v170 + (434 -(153 + 280)) ,v88[(4 + 4) -5 ]));break;end end end elseif ((452==(406 + 46)) and (v89<=(13 + 6 + 13))) then if ((v89==(17 + 14)) or (4557<(1894 + 193))) then v86[v88[2 + 0 ]]=v86[v88[4 -1 ]] * v86[v88[4]] ;else v86[v88[2 + 0 ]]=v86[v88[3]] + v86[v88[671 -(89 + 578) ]] ;end elseif (((2768 + 1106)==3874) and (v89<=(67 -34))) then local v173=1049 -(572 + 477) ;local v174;local v175;while true do if ((v173==(0 + 0)) or (((3070 -1906) + 774)>(590 + 4345))) then v174=86 -(84 + 2) ;v175=nil;v173=1;end if ((v173==1) or ((7012 -2757)<3423)) then while true do if (((1048 + (686 -280))<=(3333 -(497 + 345))) and ((0 + 0)==v174)) then v175=v88[1 + 1 ];v86[v175]=v86[v175](v86[v175 + (1334 -(605 + 728)) ]);break;end end break;end end elseif ((v89==(25 + 9)) or ((9241 -(6183 -(35 + 1064)))<=(129 + 2674))) then v86[v88[7 -5 ]]=v86[v88[3 + 0 ]];else v86[v88[2]]={};end v69=v69 + (2 -1) ;break;end if (((3665 + 1188)>=2982) and (v92==(489 -(457 + 24 + 8)))) then local v106=0;local v107;while true do if ((4134>(1425 + 1932)) and (v106==((2999 -1597) -(832 + 570)))) then v107=0;while true do if ((v107==(1 + 0)) or ((892 + 2525)<(8967 -6433))) then v92=1;break;end if (((0 + 0)==v107) or ((3518 -(588 + 208))<=(441 -277))) then local v116=1800 -(884 + 916) ;while true do if (((1 -0)==v116) or ((1397 + 1011)<2109)) then v107=654 -(232 + 421) ;break;end if (((1889 -(1569 + 320))==v116) or ((1 + 8 + 24)==1455)) then v88=v80[v69];v89=v88[(1237 -(298 + 938)) + 0 ];v116=3 -2 ;end end end end break;end end end end break;end end end end A,B=v28(v11(v73));if  not A[1] then local v93=v61[4][v69] or "?" ;error("Script error at ["   .. v93   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end
