do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v73=0;while true do if (v73==0) then v19=v0(v3(v30,1,1));return "";end end else local v74=v2(v0(v30,16));if v19 then local v79=v5(v74,v19);v19=nil;return v79;else return v74;end end end);local function v20(v31,v32,v33)if v33 then local v75=0 -0 ;local v76;while true do if (v75==(0 -0)) then v76=(v31/((3 -1)^(v32-1)))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + 1)) ;return v76-(v76%(569 -(367 + 201))) ;end end else local v77=((2566 -(1523 + 114)) -(193 + 21 + 713))^(v32-(1 + 0)) ;return (((v31%(v77 + v77))>=v77) and ((1 -0) + 0)) or (877 -(282 + (1660 -(68 + 997)))) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23()local v37=0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (961 -(892 + 65)) ;v37=1;end if (v37==(2 -(351 -(87 + 263)))) then return (v41 * (31011612 -(14234576 -(67 + 113)))) + (v40 * (120312 -54776)) + (v39 * 256) + v38 ;end end end local function v24()local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,2 -1 ,15 + 5 ) * (((798 -(368 + 423)) -5)^(984 -(802 + 150)))) + v42 ;local v46=v20(v43,(215 -159) -35 ,31);local v47=((v20(v43,57 -25 )==((3 -2) + 0)) and  -(998 -(915 + 82))) or 1 ;if (v46==(0 -0)) then if (v45==0) then return v47 * (0 + 0) ;else v46=1 -0 ;v44=1187 -(1069 + 118) ;end elseif (v46==2047) then return ((v45==(0 -0)) and (v47 * ((1 -0)/(0 + (0 -0))))) or (v47 * NaN) ;end return v8(v47,v46-(1817 -794) ) * (v44 + (v45/((20 -(10 + 8))^(52 + 0 + 0)))) ;end local function v25(v48)local v49;if  not v48 then local v78=0 -0 ;while true do if ((1138 -(116 + 1022))==v78) then v48=v23();if (v48==(438 -(145 + 293))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -((4 -3) + 0) );v18=v18 + v48 ;local v50={};for v64=(253 + 178) -(44 + 386) , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 + 0 ;local v52;local v53;local v54;local v55;local v56;local v57;while true do local v66=0 + 0 ;while true do if (v66==(529 -(406 + 123))) then if (v51~=1) then else local v90=0;while true do if (v90==(1770 -(1749 + 20))) then for v104=1 + 0 ,v56 do local v105=0 + 0 ;local v106;local v107;local v108;local v109;while true do if (v105==(1 + 0)) then v108=nil;v109=nil;v105=2;end if (v105==(1145 -(466 + 679))) then v106=0;v107=nil;v105=1;end if (v105~=(204 -(14 + 188))) then else while true do if (v106==(0 -0)) then local v119=0;while true do if (v119~=(0 -0)) then else v107=0;v108=nil;v119=676 -(534 + 141) ;end if (v119==(1 + 0)) then v106=1;break;end end end if (v106==(1 + 0)) then v109=nil;while true do if (v107==1) then if (v108==1) then v109=v21()~=0 ;elseif (v108==(2 + 0)) then v109=v24();elseif (v108==(1 + 2)) then v109=v25();end v57[v104]=v109;break;end if (0~=v107) then else local v127=0 -0 ;local v128;while true do if (v127==0) then v128=0 -0 ;while true do if (v128==(1 + 0)) then v107=585 -(57 + 527) ;break;end if ((0 -0)==v128) then local v208=0 -0 ;local v209;while true do if (v208==0) then v209=0 -0 ;while true do if (v209~=(1 + 0)) then else v128=1;break;end if (v209~=(0 + 0)) then else local v257=396 -(115 + 281) ;while true do if (v257~=(0 -0)) then else v108=v21();v109=nil;v257=1 + 0 ;end if (v257==(2 -1)) then v209=3 -2 ;break;end end end end break;end end end end break;end end end end break;end end break;end end end v55[870 -(550 + 317) ]=v21();v90=168 -(122 + 44) ;end if (v90==2) then v51=2 -0 ;break;end if (v90==0) then v56=v23();v57={};v90=1;end end end if (2~=v51) then else local v91=0 -0 ;while true do if (v91~=(1 -0)) then else for v110=1 + 0 ,v23() do v54[v110]=v23();end return v55;end if ((0 -0)==v91) then for v112=286 -(134 + 151) ,v23() do local v113=1665 -(970 + 695) ;local v114;local v115;while true do if (v113==(1 -0)) then while true do if (v114==(1990 -(582 + 1408))) then v115=v21();if (v20(v115,1258 -(1043 + 214) ,3 -2 )==(0 -0)) then local v120=0 -0 ;local v121;local v122;local v123;local v124;local v125;while true do if (v120~=(1826 -(1195 + 629))) then else v125=nil;while true do if (v121==(2 -0)) then while true do if (v122~=(241 -(187 + 54))) then else v123=v20(v115,582 -(361 + 219) ,3);v124=v20(v115,784 -(162 + 618) ,2 + 4 );v122=1 + 0 ;end if ((2 + 0)~=v122) then else local v228=0;local v229;while true do if (v228==(0 -0)) then v229=0 -0 ;while true do if (v229~=(1 + 0)) then else v122=1639 -(1373 + 263) ;break;end if (0==v229) then if (v20(v124,1001 -(451 + 549) ,851 -(20 + 830) )==1) then v125[1 + 1 ]=v57[v125[2 -0 ]];end if (v20(v124,128 -(116 + 10) ,2)==(1 -0)) then v125[1387 -(746 + 638) ]=v57[v125[741 -(542 + 196) ]];end v229=1;end end break;end end end if (v122==(2 + 1)) then if (v20(v124,3,4 -1 )==(1 + 0)) then v125[345 -(218 + 123) ]=v57[v125[1585 -(1535 + 46) ]];end v52[v112]=v125;break;end if (v122~=(1 + 0)) then else v125={v22(),v22(),nil,nil};if (v123==0) then local v247=1551 -(1126 + 425) ;local v248;while true do if ((0 + 0)==v247) then v248=0;while true do if (v248==(0 -0)) then v125[5 -2 ]=v22();v125[1125 -(118 + 1003) ]=v22();break;end end break;end end elseif (v123==(2 -1)) then v125[3]=v23();elseif (v123==(1469 -(899 + 568))) then v125[380 -(142 + 235) ]=v23() -(2^(72 -56)) ;elseif (v123==(2 + 1)) then local v275=0 -0 ;local v276;local v277;while true do if (v275==0) then local v290=0;while true do if (v290==(0 -0)) then v276=0;v277=nil;v290=1;end if (v290~=(604 -(268 + 335))) then else v275=1 + 0 ;break;end end end if (v275==1) then while true do if (v276==0) then v277=0;while true do if (v277==(290 -(60 + 230))) then v125[2 + 1 ]=v23() -(2^(588 -(426 + 146))) ;v125[4]=v22();break;end end break;end end break;end end end v122=1 + 1 ;end end break;end if (v121==(1456 -(282 + 1174))) then v122=811 -(569 + 242) ;v123=nil;v121=2 -1 ;end if (v121~=(1 + 0)) then else v124=nil;v125=nil;v121=1026 -(706 + 318) ;end end break;end if (1==v120) then v123=nil;v124=nil;v120=1253 -(721 + 530) ;end if ((1271 -(945 + 326))~=v120) then else v121=0;v122=nil;v120=754 -(239 + 514) ;end end end break;end end break;end if ((0 -0)==v113) then v114=0 + 0 ;v115=nil;v113=1 + 0 ;end end end for v116=701 -(271 + 429) ,v23() do v53[v116-(1 + 0) ]=v28();end v91=2 -1 ;end end end v66=1;end if (v66~=(1203 -(373 + 829))) then else if ((0 + 0)==v51) then local v92=731 -(476 + 255) ;local v93;while true do if (v92==0) then v93=1130 -(369 + 761) ;while true do if (2~=v93) then else v51=1501 -(1408 + 92) ;break;end if (v93~=(1086 -(461 + 625))) then else local v118=0;while true do if (v118==(1288 -(993 + 295))) then v52={};v53={};v118=1 + 0 ;end if (v118~=(1172 -(418 + 753))) then else v93=1;break;end end end if (v93==(1 + 0)) then v54={};v55={v52,v53,nil,v54};v93=2;end end break;end end end break;end end end end local function v29(v58,v59,v60)local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==3) then A,B=v27(v11(v72));if  not A[1] then local v94=v58[4][v68] or "?" ;error("Script error at ["   .. v94   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v67==2) then v72=nil;function v72()local v80=v61;local v81=v62;local v82=v63;local v83=v27;local v84={};local v85={};local v86={};for v95=0,v71 do if ((v95>=v82) or (4553<368)) then v84[v95-v82 ]=v70[v95 + (239 -(64 + 174)) ];else v86[v95]=v70[v95 + 1 ];end end local v87=(v71-v82) + 1 + 0 ;local v88;local v89;while true do local v96=(0 + 0) -(0 -0) ;while true do if (((1303 -(144 + 192))==(1183 -(42 + 174))) and (v96==(0 + 0))) then v88=v80[v68];v89=v88[1 + 0 ];v96=1 + 0 ;end if (((2986 -(363 + 1141))<=(5739 -(1183 + 397))) and (v96==1)) then if ((v89<=(51 -34)) or ((355 + 129)==(2629 + 887))) then if ((4976>(3433 -(1913 + 62))) and (v89<=(6 + (306 -(300 + 4))))) then if ((v89<=3) or ((12251 -7623)==(4805 -(565 + 1368)))) then if ((v89<=(3 -2)) or ((6247 -(1477 + 184))<(111 -29))) then if (((3600 + 71 + 192)==(4719 -(564 + 292))) and (v89>0)) then local v129=0;local v130;local v131;local v132;while true do if ((v129==(1 -0)) or ((849 -567)<=(346 -(244 + 60)))) then local v201=0 + 0 ;while true do if (((5085 -(41 + 435))>=(1767 -(938 + 63))) and (v201==(0 + 0))) then v132={};v131=v10({},{__index=function(v215,v216)local v217=1125 -(936 + 189) ;local v218;local v219;while true do if ((v217==(1 + 0)) or ((2765 -(1565 + 48))==(1537 + 951))) then while true do if (((4560 -(782 + 356))>(3617 -(176 + 91))) and (v218==0)) then local v262=0 -0 ;while true do if ((877>((1447 -894) -177)) and (v262==(1092 -(975 + 117)))) then v219=v132[v216];return v219[1876 -(157 + 1718) ][v219[2 + (362 -(112 + 250)) ]];end end end end break;end if ((v217==(0 -0)) or ((10659 -(3007 + 4534))<=(2869 -(697 + 321)))) then v218=0;v219=nil;v217=2 -1 ;end end end,__newindex=function(v220,v221,v222)local v223=(0 -0) -0 ;local v224;local v225;while true do if ((v223==(2 -1)) or ((65 + 100)>=((3748 + 2794) -3050))) then while true do if (((10585 -6636)<(6083 -(322 + 469 + 436))) and (v224==0)) then v225=v132[v221];v225[1][v225[2]]=v222;break;end end break;end if ((v223==(611 -(602 + 7 + 2))) or ((5465 -(449 + 740))<3016)) then local v249=0;while true do if (((2326 + 2364)>(4997 -(826 + 35 + 11))) and (v249==(947 -(245 + 702)))) then v224=0;v225=nil;v249=3 -2 ;end if ((v249==(1 + 0)) or ((1948 -(260 + 1638))>=896)) then v223=441 -(382 + 58) ;break;end end end end end});v201=3 -(1416 -(1001 + 413)) ;end if ((v201==(1 + 0)) or ((3542 -1828)>=(8792 -5834))) then v129=1207 -(902 + (675 -372)) ;break;end end end if ((v129==(3 -1)) or ((3590 -2099)<(56 + 588))) then for v205=1691 -(1121 + 569) ,v88[218 -(22 + 192) ] do local v206=683 -(483 + 200) ;local v207;while true do if (((2167 -(1404 + 59))<987) and (v206==1)) then if (((10175 -6457)>((3443 -(244 + 638)) -655)) and (v207[766 -(468 + 297) ]==(573 -(334 + 228)))) then v132[v205-(3 -2) ]={v86,v207[3]};else v132[v205-(1 + 0) ]={v59,v207[7 -(606 -(512 + 90)) ]};end v85[ #v85 + 1 ]=v132;break;end if ((v206==(1906 -(1665 + 241))) or ((2302 -(2061 -(373 + 344)))>(852 + 2783))) then v68=v68 + (2 -1) ;v207=v80[v68];v206=1 + 0 ;end end end v86[v88[2 + 0 ]]=v29(v130,v131,v60);break;end if (((4929 -(645 + 783))<=(2650 + 1842)) and (v129==(163 -(92 + 71)))) then local v203=0;while true do if ((v203==(0 + 0 + 0)) or ((5786 -2344)<(3313 -(574 + 191)))) then v130=v81[v88[3 + 0 ]];v131=nil;v203=(5 -3) -1 ;end if (((1469 + 1406)>=(2313 -(254 + 595))) and (v203==(127 -(55 + (119 -48))))) then v129=(1100 -(35 + 1064)) -0 ;break;end end end end else v60[v88[1793 -(417 + 156 + 1217) ]]=v86[v88[5 -3 ]];end elseif ((v89==((2 -1) + 1)) or ((7729 -2932)>=4893)) then v68=v88[942 -(714 + 225) ];else v86[v88[2]][v88[8 -(1 + 4) ]]=v88[5 -1 ];end elseif ((v89<=(1 + 4)) or ((797 -246)>(2874 -(118 + 688)))) then if (((2162 -(25 + 23))>(183 + 761)) and (v89==(1890 -(927 + 959)))) then if ((v86[v88[6 -4 ]]==v86[v88[736 -(16 + 716) ]]) or ((4366 -2104)>=(3193 -((1247 -(298 + 938)) + 86)))) then v68=v68 + (2 -(1260 -(233 + 1026))) ;else v68=v88[288 -(175 + 110) ];end else v86[v88[4 -2 ]][v88[14 -11 ]]=v86[v88[4]];end elseif ((v89<=(1802 -(503 + 1293))) or ((6297 -4042)>=(2558 + 979))) then v86[v88[1063 -(810 + (1917 -(636 + 1030))) ]]=v60[v88[3 + 0 ]];elseif ((v89>(3 + 4)) or ((3459 + 378)<1306)) then v86[v88[535 -(43 + 490) ]]=v86[v88[736 -(364 + 347 + 22) ]] + v86[v88[15 -11 ]] ;else local v175=0 + 0 ;local v176;local v177;while true do if (((3809 -(240 + 619))==(712 + 2238)) and (v175==(0 -0))) then v176=0 + 0 ;v177=nil;v175=1745 -(1344 + 400) ;end if ((v175==1) or (4723<(3703 -(255 + 150)))) then while true do if (((895 + 72 + 169)>=(83 + 71)) and (v176==0)) then v177=v88[8 -6 ];v86[v177]=v86[v177](v86[v177 + (3 -2) ]);break;end end break;end end end elseif ((v89<=((119 + 1632) -(404 + 1335))) or (271>(5154 -(183 + 223)))) then if (((5767 -1027)>=(2089 + 1063)) and (v89<=10)) then if ((v89==9) or ((928 + 1650)>=(3611 -(55 + 166)))) then v86[v88[(66 + 273) -(10 + 327) ]]();else v86[v88[2 + 0 ]]={};end elseif (((379 -(118 + 220))<=1661) and (v89>(4 + 7))) then local v143=449 -(11 + 97 + 341) ;local v144;local v145;while true do if ((601<(1599 + 1961)) and (0==v143)) then v144=0;v145=nil;v143=4 -3 ;end if (((1728 -(711 + 782))<(1316 -629)) and (v143==1)) then while true do if (((5018 -(270 + 199))>((1428 -1054) + 779)) and (v144==(297 -(36 + 261)))) then v145=v88[1821 -(580 + 1239) ];v86[v145]=v86[v145](v13(v86,v145 + (2 -1) ,v88[3 + 0 ]));break;end end break;end end else v86[v88[1 + 1 ]]=v86[v88[2 + 1 ]];end elseif ((v89<=(36 -(38 -16))) or ((2904 + (3138 -(34 + 1334)))<(5839 -(645 + 522)))) then if ((((2099 + 3359) -(1010 + 780))<4561) and (v89==(13 + 0))) then v86[v88[2]]=v86[v88[14 -(9 + 2) ]][v88[11 -7 ]];else v86[v88[2]]=v88[1839 -(1045 + 791) ];end elseif ((v89<=(37 -22)) or ((694 -(1522 -(1035 + 248)))==(4110 -(351 + 154)))) then local v152=0;local v153;local v154;while true do if ((v152==1) or ((4237 -(1281 + 293))==3312)) then while true do if (((4543 -(28 + 238))<=(9998 -5523)) and (0==v153)) then v154=v88[1561 -(1381 + (199 -(20 + 1))) ];v86[v154](v86[v154 + 1 + 0 + 0 ]);break;end end break;end if ((v152==0) or ((702 + 168)==(508 + 681))) then local v204=0;while true do if (((5353 -3800)<=3133) and (v204==1)) then v152=1 + 0 ;break;end if ((v204==(470 -(381 + 89))) or ((1984 + 253)>=(2375 + 1136))) then v153=0 -0 ;v154=nil;v204=1157 -(1074 + 82) ;end end end end elseif ((v89==(34 -18)) or ((3108 -(214 + (1889 -(134 + 185))))>(4475 -(990 + 465)))) then local v178=0;local v179;local v180;local v181;while true do if ((v178==(1 + 0)) or ((1302 + 1690)==(1830 + 51))) then v181=nil;while true do if (((12223 -9117)>(3252 -((2801 -(549 + 584)) + 58))) and (0==v179)) then v180=626 -(512 + 114) ;v181=nil;v179=2 -1 ;end if (((6249 -3226)<(13466 -9596)) and (v179==1)) then while true do if (((67 + 76)>(14 + 60)) and (v180==0)) then v181=v88[2];v86[v181](v13(v86,v181 + 1 + 0 ,v88[10 -7 ]));break;end end break;end end break;end if ((18<(4106 -(109 + 1885))) and (v178==(1469 -(1269 + 200)))) then v179=0;v180=nil;v178=1 -0 ;end end else local v182=815 -(98 + 717) ;local v183;local v184;local v185;local v186;while true do if (((1923 -(802 + 24))<=(2807 -1179)) and (v182==2)) then while true do if (((5847 -(1902 -(314 + 371)))==((2348 -1664) + 3946)) and (v183==(1 + (968 -(478 + 490))))) then v186=nil;while true do if (((582 + 2958)>2683) and (v184==(0 + 0))) then local v254=0 + 0 ;while true do if ((4794>=(9110 -5835)) and (v254==(0 -0))) then local v266=0 + 0 ;while true do if (((605 + 879)==(1225 + (1431 -(786 + 386)))) and (v266==0)) then v185=v88[2];v186={};v266=1 + 0 ;end if (((669 + 763)<(4988 -(797 + 636))) and (v266==(4 -3))) then v254=1620 -(1427 + 192) ;break;end end end if ((v254==(1 + 0)) or ((2472 -1407)>((10419 -7202) + (1740 -(1055 + 324))))) then v184=1;break;end end end if ((v184==(1 + 0)) or ((6135 -(1093 + 247))<(1733 -(192 + 134)))) then for v259=1, #v85 do local v260=1276 -(316 + 960) ;local v261;while true do if (((1032 + 821)<(3302 + 413 + 1098)) and (v260==0)) then v261=v85[v259];for v279=0 + 0 , #v261 do local v280=0;local v281;local v282;local v283;local v284;local v285;while true do if ((v280==(0 -0)) or (2821<2431)) then v281=551 -(83 + 468) ;v282=nil;v280=1807 -(1202 + 604) ;end if ((v280==1) or ((13416 -10542)<2181)) then v283=nil;v284=nil;v280=(1 + 1) -(0 -0) ;end if ((v280==2) or (2689<=(949 -606))) then v285=nil;while true do if ((v281==(326 -(45 + 280))) or ((1804 + 65)==(1756 + 253))) then local v291=0 -0 ;while true do if ((v291==((0 -0) + 0)) or (3546<(1285 + 1037))) then v284=nil;v285=nil;v291=1 + 0 ;end if ((v291==(1 -0)) or ((3993 -(340 + 1571))==4773)) then v281=1 + 1 ;break;end end end if ((((12604 -7588) -(1733 + 39))>(2898 -1843)) and (v281==0)) then v282=(368 + 666) -(125 + 909) ;v283=nil;v281=1949 -(1096 + 852) ;end if ((v281==(1 + 1)) or ((4730 -1417)<=(1725 + 53))) then while true do if ((v282==1) or ((1933 -(409 + 103))>=2104)) then v285=v283[238 -(46 + 190) ];if ((((7346 -5439) -(51 + (151 -107)))<=(917 + 2332)) and (v284==v86) and (v285>=v185)) then local v296=1317 -(840 + 274 + 203) ;while true do if ((1623<=(2683 -(228 + 498))) and (v296==(0 -0))) then v186[v285]=v284[v285];v283[1]=v186;break;end end end break;end if (((956 + 3456)==(2438 + 1974)) and (v282==(663 -(174 + 489)))) then local v295=0 -0 ;while true do if (((3655 -(830 + 1075))>=(1366 -(303 + 221))) and (v295==((1957 -(364 + 324)) -(231 + 1038)))) then local v297=0 + 0 ;while true do if (((5534 -(171 + 991))>(7624 -5774)) and (v297==1)) then v295=1;break;end if (((622 -390)<821) and (v297==(0 -0))) then v283=v261[v279];v284=v283[1];v297=(2 -1) + 0 ;end end end if (((1815 -1297)<(2601 -1699)) and (v295==(1 -0))) then v282=3 -2 ;break;end end end end break;end end break;end end end break;end end end break;end end break;end if (((4242 -(111 + 1137))>(1016 -(91 + 67))) and (0==v183)) then v184=(0 -0) -(0 + 0) ;v185=nil;v183=1;end end break;end if ((v182==(0 + 0)) or ((4278 -(423 + (418 -318)))<=(1465 -550))) then v183=0;v184=nil;v182=1 + 0 ;end if (((10925 -6979)>3743) and (1==v182)) then v185=nil;v186=nil;v182=2 + 0 ;end end end elseif ((v89<=(797 -(326 + 445))) or ((5825 -4490)>=(7364 -4058))) then if (((11306 -6462)>2253) and (v89<=((2223 -1491) -(530 + 181)))) then if (((1333 -(614 + 267))==(484 -(19 + (1281 -(1249 + 19))))) and (v89<=19)) then if ((v89==18) or ((7416 -(2581 + 278))<(4863 -2776))) then do return v86[v88[5 -3 ]];end else local v155=0;local v156;local v157;while true do if (((1007 + 2867)==(6812 -2938)) and (v155==(1 -(0 -0)))) then while true do if ((v156==(1812 -(1293 + 519))) or ((3953 -2015)>(12885 -7950))) then v157=v88[3 -1 ];do return v13(v86,v157,v157 + v88[12 -9 ] );end break;end end break;end if (((0 -0)==v155) or ((2254 + 2001)<(4509 -(686 + 400)))) then v156=0 + 0 ;v157=nil;v155=1;end end end elseif (((3378 -1924)<=(576 + 1915)) and (v89==(7 + 13))) then if ( not v86[v88[2 + 0 ]] or ((5253 -(709 + 387))<=2803)) then v68=v68 + (1859 -(673 + 1185)) ;else v68=v88[8 -5 ];end else v86[v88[6 -4 ]]=v86[v88[3]] * v86[v88[6 -2 ]] ;end elseif (((3472 + 1381)>=2982) and (v89<=(18 + 5))) then if (((5581 -(1136 + 311))>3357) and (v89>(6 + 16))) then v86[v88[2]]=v59[v88[5 -2 ]];else local v161=0 -0 ;local v162;local v163;local v164;local v165;local v166;local v167;while true do if (((1883 -(446 + 1434))==v161) or ((4700 -(1040 + 243))<(7563 -5029))) then while true do if ((v162==(1849 -(559 + 1288))) or ((4653 -(609 + 1322))<=(393 -(73 + 156)))) then v167=nil;while true do if (((455 -(13 + 441))==v163) or (2408<(7880 -5771))) then local v241=0 -0 ;local v242;while true do if ((v241==(0 -0)) or (33==(55 + 1400))) then v242=0 -0 ;while true do if ((v242==(1 + 0 + 0)) or ((195 + 248)>=(11914 -7899))) then v163=2 + 0 ;break;end if ((3382>(304 -138)) and (v242==(0 + 0))) then v69=(v166 + v164) -(1 + (811 -(721 + 90))) ;v167=0;v242=1;end end break;end end end if ((v163==2) or (280==3059)) then for v250=v164,v69 do local v251=0 + 0 ;local v252;while true do if (((1580 + 301)>(15 + 1251 + (87 -60))) and (v251==0)) then v252=433 -(153 + 280) ;while true do if ((2357==(6805 -4448)) and (v252==(0 + 0))) then v167=v167 + 1 + 0 ;v86[v250]=v165[v167];break;end end break;end end end break;end if (((65 + 58)==(112 + 11)) and (v163==(0 + 0))) then local v243=0 -0 ;local v244;while true do if ((v243==(0 + 0)) or ((1723 -(89 + 578))>=((2894 -(224 + 246)) + 968))) then v244=0 -0 ;while true do if ((v244==((1 -0) -0)) or (((387 + 1743) -(572 + 477))<(145 + 930))) then v163=1 + 0 ;break;end if (((0 + 0)==v244) or ((126 + 923)>=4432)) then local v268=86 -(84 + 2) ;while true do if ((v268==1) or ((7857 -3089)<=(610 + 236))) then v244=(620 + 223) -((987 -490) + (1148 -803)) ;break;end if ((v268==(0 + 0)) or (3358<=(241 + 1179))) then v164=v88[1335 -(605 + 728) ];v165,v166=v83(v86[v164](v13(v86,v164 + 1 + 0 ,v88[3])));v268=1;end end end end break;end end end end break;end if ((v162==(0 -0)) or (3739<=(138 + 2867))) then v163=0 -0 ;v164=nil;v162=1;end if ((v162==(1 + 0)) or ((4596 -2937)>=(1612 + 522))) then v165=nil;v166=nil;v162=2;end end break;end if ((v161==(491 -(457 + 32))) or ((1384 + 1876)<2355)) then v166=nil;v167=nil;v161=1405 -(832 + 570) ;end if ((v161==(1 + 0)) or ((175 + 494)==(14944 -10721))) then v164=nil;v165=nil;v161=2;end if ((v161==(0 + 0)) or (1692<588)) then v162=796 -(588 + 208) ;v163=nil;v161=1;end end end elseif ((v89<=(64 -(553 -(203 + 310)))) or ((6597 -(884 + 916))<(7643 -3992))) then do return;end elseif ((v89==((2008 -(1238 + 755)) + 10)) or (4177>(5503 -(232 + 421)))) then v86[v88[2]]=v88[1892 -(1569 + 320) ]~=(0 + 0) ;else v86[v88[2]]=v29(v81[v88[1 + 2 ]],nil,v60);end elseif ((v89<=(101 -71)) or (400>1111)) then if (((3656 -(316 + 289))>((184 + 2446) -1625)) and (v89<=(2 + 26))) then if (((5146 -((2200 -(709 + 825)) + 787))<=(4807 -(360 + 65))) and (v89>(26 + 1))) then v59[v88[257 -(79 + 175) ]]=v86[v88[2]];elseif ((v86[v88[2 -0 ]]~=v86[v88[4 + 0 ]]) or ((10059 -6777)>(7896 -3796))) then v68=v68 + (900 -(503 + 396)) ;else v68=v88[184 -((169 -77) + 89) ];end elseif ((v89>29) or (3580<(5517 -2673))) then for v171=v88[2 + 0 ],v88[3] do v86[v171]=nil;end elseif ((((76 -23) + 36)<(17583 -13093)) and v86[v88[1 + 1 ]]) then v68=v68 + ((866 -(196 + 668)) -1) ;else v68=v88[3 + 0 ];end elseif ((v89<=(16 + 16)) or (4983<1808)) then if (((11661 -7832)>(471 + 3298)) and (v89==(46 -15))) then v86[v88[1246 -(485 + 759) ]]=v86[v88[6 -3 ]] -v86[v88[15 -11 ]] ;elseif (((2674 -(442 + 747))<=(4039 -(832 + (627 -324)))) and (v88[948 -(88 + (1691 -(171 + 662))) ]==v86[v88[2 + 2 ]])) then v68=v68 + (94 -(4 + 89)) + 0 ;else v68=v88[1 + 2 ];end elseif (((5058 -(766 + 23))==(21074 -16805)) and (v89<=33)) then if (((529 -142)<=(7329 -4547)) and (v86[v88[2]]==v88[13 -9 ])) then v68=v68 + ((3764 -2690) -(1036 + 37)) ;else v68=v88[3 + 0 ];end elseif ((v89>(65 -31)) or ((1494 + 405)<=(2397 -(641 + 839)))) then local v194=913 -(332 + 578 + 3) ;local v195;local v196;local v197;while true do if ((v194==(2 -1)) or ((5996 -(1466 + 218))<=(403 + 473))) then v197=nil;while true do if (((3380 -(556 + 592))<=(924 + (7343 -5671))) and (v195==(808 -(329 + 479)))) then local v233=854 -(174 + 680) ;while true do if (((822 + 1273)<(12665 -8979)) and (v233==(1 -0))) then v195=1 + 0 ;break;end if ((v233==0) or ((2334 -(396 + 343))>=(396 + (5564 -(35 + 1451))))) then v196=v88[1479 -(29 + 1448) ];v197=v86[v88[1392 -((1588 -(28 + 1425)) + 1254) ]];v233=3 -2 ;end end end if ((v195==(4 -3)) or ((3079 + 1540)<2882)) then v86[v196 + (1528 -(389 + (3131 -(941 + 1052)))) ]=v197;v86[v196]=v197[v88[578 -(102 + 472) ]];break;end end break;end if ((v194==(0 + 0 + 0)) or ((164 + (1644 -(822 + 692)))>=(4505 + 326))) then v195=1545 -(320 + 1225) ;v196=nil;v194=1;end end else local v198=0 -0 ;local v199;local v200;while true do if (((1242 + 787)<=(4548 -(157 + 1307))) and (v198==(1860 -(821 + 1038)))) then while true do if ((v199==((0 -0) -0)) or ((223 + 1814)==(4298 -(885 + 993)))) then v200=v88[1 + 1 ];v86[v200]=v86[v200](v13(v86,v200 + (2 -1) ,v69));break;end end break;end if (((5484 -(834 + (489 -(45 + 252))))>3904) and (v198==0)) then v199=0 + 0 ;v200=nil;v198=1 + 0 ;end end end v68=v68 + 1 + 0 ;break;end end end end v67=3;end if (v67==1) then v70={...};v71=v12("#",...) -1 ;v67=2;end if (v67==0) then v68=1;v69= -1;v67=1;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
