do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==2) then function v22()local v31=v1(v16,v19,v19);v19=v19 + 1 ;return v31;end v23=nil;function v23()local v32,v33=v1(v16,v19,v19 + (5 -3) );v19=v19 + (5 -3) ;return (v33 * (493 -237)) + v32 ;end v18=3;end if (v18==4) then function v25()local v34=v24();local v35=v24();local v36=2 -1 ;local v37=(v21(v35,620 -(555 + 64) ,951 -(629 + 228 + 74) ) * (2^(600 -(367 + 201)))) + v34 ;local v38=v21(v35,948 -(214 + 713) ,8 + 23 );local v39=((v21(v35,32)==(1 + 0)) and  -(878 -(282 + 595))) or (1638 -((2815 -1292) + 114)) ;if (v38==(0 + 0)) then if (v37==0) then return v39 * (0 -(0 -0)) ;else v38=351 -(87 + 263) ;v36=1065 -(68 + 997) ;end elseif (v38==(3317 -(226 + 1044))) then return ((v37==(0 -0)) and (v39 * ((118 -((212 -(67 + 113)) + 85))/(0 + 0)))) or (v39 * NaN) ;end return v8(v39,v38-(227 + (1954 -1158)) ) * (v36 + (v37/((959 -(892 + 65))^(123 -71)))) ;end v26=nil;function v26(v40)local v41=(0 -0) + 0 ;local v42;local v43;while true do if (v41==(3 -(3 -1))) then v42=v3(v16,v19,(v19 + v40) -(953 -(802 + 150)) );v19=v19 + v40 ;v41=(1 + 4) -3 ;end if (v41==(3 -1)) then v43={};for v77=1, #v42 do v43[v77]=v2(v1(v3(v42,v77,v77)));end v41=(4 -1) + 0 + 0 ;end if (v41==(1000 -(915 + (873 -(368 + 423))))) then return v6(v43);end if (v41==(0 -0)) then v42=nil;if  not v40 then local v86=0 + 0 ;while true do if (v86==(0 -0)) then v40=v24();if (v40==0) then return "";end break;end end end v41=1188 -(1069 + 118) ;end end end v18=5;end if (v18==6) then v29=nil;function v29()local v44=1251 -(721 + 530) ;local v45;local v46;local v47;local v48;local v49;local v50;while true do local v67=1271 -(945 + 326) ;local v68;while true do if (v67==(261 -(241 + 20))) then v68=0 -0 ;while true do if (v68==(1 + 0)) then if (v44~=0) then else local v97=438 -(262 + 176) ;while true do if (v97~=(1721 -(345 + 1376))) then else v45={};v46={};v97=1;end if (v97~=(1501 -(1408 + 92))) then else v47={};v44=689 -(198 + 490) ;break;end end end if (2==v44) then for v105=4 -3 ,v49 do local v106=0;local v107;local v108;local v109;local v110;while true do if (v106==(2 -1)) then v109=nil;v110=nil;v106=1208 -(696 + 510) ;end if (v106==(0 -0)) then v107=1262 -(1091 + 171) ;v108=nil;v106=1 + 0 ;end if (v106==(1 + 1)) then while true do if (v107==(0 + 0)) then v108=0 + 0 ;v109=nil;v107=1 + 0 ;end if (v107==(3 -2)) then v110=nil;while true do if (v108~=1) then else if (v109==(530 -(406 + 123))) then v110=v22()~=0 ;elseif (v109==(6 -4)) then v110=v25();elseif (v109==(377 -(123 + 251))) then v110=v26();end v50[v105]=v110;break;end if (v108==(0 + 0)) then local v129=1322 -(1249 + 73) ;local v130;local v131;while true do if (v129~=0) then else v130=0 + 0 ;v131=nil;v129=1146 -(466 + 679) ;end if (v129==1) then while true do if (v130==0) then v131=0 -0 ;while true do if (v131==1) then v108=4 -3 ;break;end if (v131~=(698 -(208 + 490))) then else local v229=0 + 0 ;while true do if (v229==(1 + 0)) then v131=1901 -(106 + 1794) ;break;end if (v229~=(836 -(660 + 176))) then else v109=v22();v110=nil;v229=1 + 0 ;end end end end break;end end break;end end end end break;end end break;end end end v48[205 -(14 + 188) ]=v22();for v111=1,v24() do local v112=675 -(534 + 141) ;local v113;local v114;while true do if (v112~=(1 + 0)) then else while true do if (v113==(0 -0)) then v114=v22();if (v21(v114,1,1 + 0 )==(0 + 0)) then local v124=0 -0 ;local v125;local v126;local v127;while true do if (v124==0) then local v136=584 -(57 + 527) ;local v137;while true do if (v136==(0 -0)) then v137=0;while true do if (v137==(2 -1)) then v124=104 -(17 + 86) ;break;end if (0==v137) then local v227=0;while true do if (v227==(0 + 0)) then v125=v21(v114,2 + 0 ,3);v126=v21(v114,4,402 -(115 + 281) );v227=2 -1 ;end if ((1 + 0)==v227) then v137=2 -1 ;break;end end end end break;end end end if (v124==(5 -2)) then if (v21(v126,9 -6 ,3 + 0 )~=1) then else v127[14 -10 ]=v50[v127[4]];end v45[v111]=v127;break;end if (v124==(868 -(550 + 317))) then local v139=0 -0 ;while true do if (v139~=(0 -0)) then else local v197=0 -0 ;while true do if (v197~=(1 + 0)) then else v139=1;break;end if (v197~=(1257 -(1043 + 214))) then else v127={v23(),v23(),nil,nil};if (v125==(0 -0)) then local v244=0;local v245;while true do if (v244==0) then v245=580 -(361 + 219) ;while true do if (v245~=(1990 -(582 + 1408))) then else v127[10 -7 ]=v23();v127[1 + 3 ]=v23();break;end end break;end end elseif (v125==(1 -0)) then v127[985 -(18 + 964) ]=v24();elseif (v125==(7 -5)) then v127[11 -8 ]=v24() -((2 + 0)^(1840 -(1195 + 629))) ;elseif (v125~=(3 -0)) then else local v278=241 -(187 + 54) ;local v279;while true do if (v278==(780 -(162 + 618))) then v279=0;while true do if (v279~=(0 + 0)) then else v127[2 + 1 ]=v24() -((1 + 1)^(33 -17)) ;v127[6 -2 ]=v23();break;end end break;end end end v197=1 + 0 ;end end end if (v139==(1 + 0)) then v124=2;break;end end end if ((1 + 1)==v124) then local v140=0 + 0 ;while true do if (v140==0) then if (v21(v126,1637 -(1373 + 263) ,1)~=(1001 -(451 + 549))) then else v127[1 + 1 ]=v50[v127[2 -0 ]];end if (v21(v126,2 -0 ,2)==(1552 -(1126 + 425))) then v127[1387 -(746 + 638) ]=v50[v127[408 -(118 + 287) ]];end v140=1 + 0 ;end if (v140==(3 -2)) then v124=1124 -(118 + 1003) ;break;end end end end end break;end end break;end if (v112==0) then local v122=0;while true do if (v122==(1 -0)) then v112=342 -(218 + 123) ;break;end if (v122~=(1581 -(1535 + 46))) then else v113=0 + 0 ;v114=nil;v122=1 + 0 ;end end end end end v44=1 + 2 ;end break;end if (v68==0) then if ((978 -(553 + 424))==v44) then local v99=560 -(306 + 254) ;while true do if (v99==(0 + 0)) then local v119=0 -0 ;while true do if (v119==(1468 -(899 + 568))) then v99=1;break;end if (v119~=(0 + 0)) then else v48={v45,v46,nil,v47};v49=v24();v119=291 -(60 + 230) ;end end end if (v99~=1) then else v50={};v44=2;break;end end end if (v44==(575 -(426 + 146))) then local v100=0;local v101;while true do if ((0 -0)~=v100) then else v101=0;while true do local v123=0;while true do if (v123==(0 + 0)) then if (v101==(1457 -(282 + 1174))) then return v48;end if (v101~=(811 -(569 + 242))) then else for v132=2 -1 ,v24() do v46[v132-(1 + 0) ]=v29();end for v134=4 -3 ,v24() do v47[v134]=v24();end v101=754 -(239 + 514) ;end break;end end end break;end end end v68=1025 -(706 + 318) ;end end break;end end end end v30=nil;v18=7;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v51)if (v1(v51,2)==79) then local v69=0;while true do if (v69==0) then v20=v0(v3(v51,1,1));return "";end end else local v70=v2(v0(v51,16));if v20 then local v79=v5(v70,v20);v20=nil;return v79;else return v70;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v52=1329 -(797 + (1662 -(369 + 761))) ;local v53;local v54;local v55;local v56;while true do if (v52==(1 + 0)) then return (v56 * 16777216) + (v55 * (12790 + 9319 + 43427)) + (v54 * 256) + v53 ;end if (v52==(0 -0)) then v53,v54,v55,v56=v1(v16,v19,v19 + (1205 -(373 + 829)) );v19=v19 + ((1335 -600) -(476 + 255)) ;v52=1;end end end v25=nil;v18=4;end if (v18==7) then function v30(v57,v58,v59)local v60=0;local v61;local v62;local v63;while true do if (v60==1) then v63=v57[3];return function(...)local v80=0;local v81;local v82;local v83;local v84;local v85;while true do if (v80==3) then A,B=v28(v11(v85));if  not A[1] then local v102=v57[4][v81] or "?" ;error("Script error at ["   .. v102   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v80==0) then v81=1;v82= -1;v80=1;end if (v80==2) then v85=nil;function v85()local v87=v61;local v88=v62;local v89=v63;local v90=v28;local v91={};local v92={};local v93={};for v103=0 -(254 -(79 + 175)) ,v84 do if ((v103>=v89) or ((3673 -(64 + 174))==(299 + 1798))) then v91[v103-v89 ]=v83[v103 + (1 -0) ];else v93[v103]=v83[v103 + 1 ];end end local v94=(v84-v89) + (337 -(144 + (302 -110))) ;local v95;local v96;while true do local v104=(169 + 47) -(42 + 174) ;while true do if ((v104==((2 -1) + 0)) or ((7260 -3490)>=4041)) then if ((v96<=17) or ((3141 + 650)<=1611)) then if ((v96<=(4 + 4)) or (4578<=2008)) then if (((2629 -(363 + 1141))<=(3656 -(1183 + (1296 -(503 + 396))))) and (v96<=(8 -(186 -(92 + 89))))) then if ((v96<=(1 + 0)) or ((556 + 187)>=(8533 -4134))) then if (((3130 -(1913 + 62))<1673) and (v96==(0 + 0 + 0))) then local v141=0 -0 ;local v142;local v143;while true do if ((v141==(1933 -(565 + 1368))) or ((8739 -6415)<=(2239 -(1477 + 184)))) then local v210=0;while true do if (((5132 -1365)==(3510 + 257)) and (v210==(856 -(564 + 292)))) then v142=v95[2 -(0 + 0) ];v143={};v210=(7 -5) -1 ;end if ((4089==(4393 -(244 + 60))) and (v210==(1 + 0))) then v141=477 -(41 + 435) ;break;end end end if ((4458>=(2675 -(938 + 63))) and (v141==1)) then for v218=1 + 0 , #v92 do local v219=0;local v220;local v221;while true do if ((972<=(2543 -(936 + 189))) and (v219==(1 + 0))) then while true do if ((v220==(1613 -(1565 + 48))) or ((3051 + 1887)<4762)) then v221=v92[v218];for v270=1138 -(107 + 675 + 356) , #v221 do local v271=267 -(176 + 91) ;local v272;local v273;local v274;while true do if ((1==v271) or ((6523 -4019)>4264)) then v274=v272[2 -0 ];if (((3245 -(975 + 117))==(4028 -(157 + (3916 -2198)))) and (v273==v93) and (v274>=v142)) then local v288=0 + 0 ;while true do if ((v288==(0 -0)) or ((1733 -1226)>=(3609 -(697 + 321)))) then v143[v274]=v273[v274];v272[2 -1 ]=v143;break;end end end break;end if (((9493 -5012)==((9013 + 1317) -5849)) and (v271==(0 + 0))) then local v285=(0 + 0) -0 ;while true do if ((v285==1) or ((6240 -3912)<(1920 -(322 + 905)))) then v271=612 -(602 + 9) ;break;end if ((((16802 -11285) -(57 + 392 + 740))==(5200 -(826 + 46))) and (v285==(947 -((373 -128) + 702)))) then v272=v221[v270];v273=v272[3 -(1246 -(485 + 759)) ];v285=1 + 0 ;end end end end end break;end end break;end if ((((8066 -4580) -(260 + 1638))>=(1772 -(382 + 58))) and (v219==(0 -(1189 -(442 + 747))))) then local v246=0 + 0 ;while true do if ((1==v246) or ((8626 -4452)>(12627 -8379))) then v219=1206 -(902 + 303) ;break;end if ((v246==(0 -0)) or (4586<=(197 -115))) then v220=0 + (1135 -(832 + 303)) ;v221=nil;v246=1691 -((2067 -(88 + 858)) + 569) ;end end end end end break;end end else v93[v95[216 -(22 + 192) ]]=v93[v95[3]] -v93[v95[687 -(483 + 200) ]] ;end elseif ((3863==3863) and (v96==(1465 -(1404 + 59)))) then v93[v95[5 -(1 + 2) ]][v95[3]]=v93[v95[4 -0 ]];else local v147=765 -(468 + 297) ;local v148;local v149;local v150;local v151;while true do if (((562 -(334 + 228))==v147) or (282<=(141 -99))) then v148=v95[4 -2 ];v149,v150=v90(v93[v148](v13(v93,v148 + (1 -0) ,v95[1 + 0 + 2 ])));v147=237 -(141 + 4 + 91) ;end if (((4528 + 81)>=(1971 -1205)) and (v147==(4 -2))) then for v222=v148,v82 do local v223=0 + 0 ;while true do if ((v223==0) or ((3156 -2004)==2488)) then v151=v151 + 1 + 0 ;v93[v222]=v149[v151];break;end end end break;end if (((1782 + 1640)>3350) and (v147==(1 -0))) then local v212=0;while true do if (((518 + (1148 -(766 + 23)))>(539 -(92 + 71))) and (v212==(1 + 0))) then v147=2 -0 ;break;end if ((v212==(765 -(574 + 191))) or ((2572 + 546)<=1851)) then v82=(v150 + v148) -(2 -1) ;v151=0 + 0 ;v212=850 -(254 + 595) ;end end end end end elseif ((v96<=((646 -515) -(55 + (96 -25)))) or ((216 -51)>=(5282 -(573 + (3206 -1989))))) then if (((13402 -9453)<(13448 -8592)) and (v96==4)) then v93[v95[1 + 1 ]]=v30(v88[v95[3]],nil,v59);else local v153=0 -0 ;local v154;local v155;while true do if ((v153==1) or ((5215 -(714 + 225))<3016)) then while true do if (((13706 -9016)>4125) and (v154==((1073 -(1036 + 37)) -0))) then v155=v95[1 + 1 ];v93[v155]=v93[v155](v13(v93,v155 + 1 ,v82));break;end end break;end if (((0 -(0 + 0))==v153) or ((856 -(118 + 688))>=(944 -(25 + (44 -21))))) then v154=0 + 0 ;v155=nil;v153=1887 -(927 + 959) ;end end end elseif ((v96<=6) or ((5777 -(3197 + 866))>=(3690 -(16 + 716)))) then v93[v95[3 -1 ]]=v59[v95[3]];elseif ((v96==(104 -(11 + 86))) or (1491<644)) then do return;end elseif ((704<987) and v93[v95[4 -(1482 -(641 + 839)) ]]) then v81=v81 + (286 -(175 + 110)) ;else v81=v95[6 -3 ];end elseif ((3718>(9400 -7494)) and (v96<=(1808 -(503 + 1293)))) then if ((v96<=(27 -17)) or ((693 + (1178 -(910 + 3)))>(4696 -(810 + (639 -388))))) then if ((3501<=(3118 + 1374)) and (v96>(3 + (1690 -(1466 + 218))))) then if ( not v93[v95[1 + 1 + 0 ]] or ((3975 -(43 + 490))<2548)) then v81=v81 + (734 -(711 + 22)) ;else v81=v95[3];end else for v195=v95[2],v95[11 -8 ] do v93[v195]=nil;end end elseif ((2875>=1464) and (v96>11)) then v93[v95[2]]=v93[v95[862 -(240 + (1767 -(556 + 592))) ]] + v93[v95[1 + 0 + 3 ]] ;else local v159=0 -0 ;local v160;local v161;local v162;local v163;while true do if (((0 + 0)==v159) or ((6541 -(1344 + 400))>=(5298 -(255 + 150)))) then v160=0 + 0 ;v161=nil;v159=1;end if ((v159==2) or (551>(1108 + 960))) then while true do if (((9032 -6918)>(3048 -2104)) and (v160==(1740 -(404 + (2143 -(329 + 479)))))) then local v233=406 -(183 + 223) ;while true do if ((v233==1) or (((3606 -(174 + 680)) -490)>=(2052 + 1044))) then v160=2;break;end if ((v233==0) or ((812 + 1443)>=(3874 -(10 + (1123 -796))))) then v163={};v162=v10({},{__index=function(v258,v259)local v260=0 + (0 -0) ;local v261;local v262;local v263;while true do if ((v260==(338 -(118 + 220))) or (3837<1306)) then v261=0 + 0 ;v262=nil;v260=450 -(108 + 341) ;end if (((1325 + 1625)==(12472 -9522)) and (v260==(1494 -(711 + 782)))) then v263=nil;while true do if ((v261==(0 -0)) or ((5192 -(270 + 199))<(764 + 306 + 2228))) then v262=1819 -(580 + (1978 -(396 + 343))) ;v263=nil;v261=2 -1 ;end if (((1087 + 49)>=(1 + 5 + 148)) and ((1 + 0)==v261)) then while true do if ((v262==(0 -0)) or ((169 + 102)>(5915 -(645 + 522)))) then local v297=1790 -(1010 + 780) ;local v298;while true do if (((4738 + 2)>=(15015 -11863)) and (v297==(0 -0))) then v298=1836 -((2522 -(29 + 1448)) + 791) ;while true do if ((v298==(0 -0)) or ((3936 -1358)>=(3895 -(351 + 154)))) then v263=v163[v259];return v263[1][v263[1576 -(1281 + 293) ]];end end break;end end end end break;end end break;end end end,__newindex=function(v264,v265,v266)local v267=0;local v268;while true do if (((307 -(28 + 238))<=(3711 -2050)) and (v267==(1559 -((2770 -(135 + 1254)) + 178)))) then v268=v163[v265];v268[1 + 0 ][v268[2 + 0 ]]=v266;break;end end end});v233=1;end end end if (((257 + (1295 -951))<(12272 -8712)) and (v160==(2 + 0))) then for v249=471 -(381 + 89) ,v95[4 + 0 ] do local v250=0 + 0 ;local v251;local v252;while true do if ((((1876 -1474) -167)<(1843 -(1074 + 82))) and (v250==(0 -0))) then v251=1784 -(214 + 1570) ;v252=nil;v250=1456 -(990 + 465) ;end if (((1876 + 1782 + 891)>(502 + (2178 -(389 + 1138)))) and (1==v250)) then while true do if ((v251==(0 + 0)) or ((18394 -(14294 -(102 + 472)))<(6398 -(1668 + 58)))) then local v282=0;while true do if ((3668<((4895 + 292) -(512 + 114))) and (v282==(0 -0))) then v81=v81 + (1 -0) ;v252=v87[v81];v282=3 -2 ;end if ((v282==(1 + 0)) or ((86 + 369)==(3134 + 471))) then v251=1;break;end end end if ((v251==1) or ((8982 -6319)==((2943 + 2363) -(109 + 1885)))) then if (((5746 -(1269 + 200))<=((7998 + 579) -4102)) and (v252[1]==32)) then v163[v249-1 ]={v93,v252[5 -2 ]};else v163[v249-(1 -0) ]={v58,v252[1 + 2 ]};end v92[ #v92 + 1 + 0 ]=v163;break;end end break;end end end v93[v95[1 + 1 ]]=v30(v161,v162,v59);break;end if ((v160==(0 + 0)) or ((2420 -1550)==(3964 -(1698 + 1077)))) then local v235=0;while true do if (((556 + 997)<=(1276 + 1857)) and (v235==(1 + 0))) then v160=1 + 0 ;break;end if ((v235==(0 + (1464 -(157 + 1307)))) or ((3670 -(797 + 636))>=(17047 -13536))) then v161=v88[v95[3]];v162=nil;v235=1620 -(1427 + 192) ;end end end end break;end if ((v159==((1860 -(821 + 1038)) + (0 -0))) or ((3073 -(192 + 1557))>(2715 + 305))) then v162=nil;v163=nil;v159=1 + 1 ;end end end elseif ((v96<=14) or ((3318 -(192 + 134))==(3157 -(316 + 960)))) then if (((1729 + 1377)>((2092 -914) + 348)) and (v96>(13 + 0))) then v93[v95[(3 + 4) -5 ]]=v93[v95[554 -(83 + 468) ]][v95[1810 -(1202 + 604) ]];else v81=v95[3];end elseif (((14111 -11088)<(6440 -2570)) and (v96<=(41 -26))) then v93[v95[327 -(45 + 280) ]]=v93[v95[3 + 0 ]] * v93[v95[4 + 0 ]] ;elseif (((53 + 90)>(41 + 33)) and (v96>(3 + 13))) then if (((32 -14)<(4023 -(340 + 1571))) and (v95[1 + 1 ]==v93[v95[4]])) then v81=v81 + (1773 -(1733 + (96 -57))) ;else v81=v95[3];end else local v199=0;local v200;while true do if (((3014 -1917)<=(2662 -(125 + 909))) and (v199==0)) then v200=v95[2];v93[v200](v13(v93,v200 + (1949 -(1096 + 852)) ,v95[3]));break;end end end elseif (((2077 + 2553)==4630) and (v96<=(36 -10))) then if (((3434 + 106)>(3195 -(409 + 103))) and (v96<=(257 -((1072 -(834 + 192)) + 190)))) then if (((4889 -(51 + 44))>=(924 + 2351)) and (v96<=19)) then if (((2801 -(1114 + 203))==(2210 -(228 + 498))) and (v96==(4 + 14))) then local v168=0 + 0 ;local v169;local v170;while true do if ((((134 + 1961) -(174 + 489))<(9261 -5706)) and ((1905 -(830 + 1075))==v168)) then v169=524 -(303 + 221) ;v170=nil;v168=1270 -(60 + 171 + 1038) ;end if ((v168==(1 + 0)) or (1065>(4740 -(171 + 991)))) then while true do if ((v169==(0 -0)) or ((12875 -(174 + 7906))<(3510 -2103))) then v170=v95[2 + 0 ];v93[v170](v93[v170 + (3 -2) ]);break;end end break;end end else v59[v95[3]]=v93[v95[5 -3 ]];end elseif (((2986 -1133)<4813) and (v96==(61 -41))) then local v173=1248 -(111 + (1760 -623)) ;local v174;local v175;while true do if ((v173==(159 -((395 -(300 + 4)) + 67))) or ((8395 -(1489 + 4085))<(607 + 1824))) then while true do if ((v174==(523 -(423 + 100))) or ((21 + 2853)<(6038 -3857))) then v175=v95[2 + 0 ];v93[v175]=v93[v175](v93[v175 + (772 -((853 -527) + 445)) ]);break;end end break;end if ((v173==0) or (2689<=343)) then local v213=0;while true do if ((v213==(4 -3)) or ((4163 -2294)==(4688 -2679))) then v173=1;break;end if ((v213==(711 -(530 + 181))) or (3546<(3203 -(614 + 267)))) then v174=0;v175=nil;v213=33 -(19 + 13) ;end end end end else v58[v95[4 -1 ]]=v93[v95[4 -2 ]];end elseif ((v96<=(65 -(404 -(112 + 250)))) or ((541 + 1541)==(8393 -3620))) then if (((6727 -3483)>1055) and (v96>(1834 -(1293 + 519)))) then v93[v95[3 -1 ]]=v95[7 -4 ];else do return v93[v95[3 -1 ]];end end elseif ((v96<=(10 + 14)) or ((14285 -10972)<=(4188 -2410))) then local v180=0 + 0 ;local v181;local v182;local v183;while true do if ((v180==(0 + 0)) or ((3301 -1880)>=(487 + 1617))) then v181=0;v182=nil;v180=1 + 0 ;end if (((1133 + (1700 -1021))<=(4345 -(709 + 387))) and (v180==(1859 -(673 + 1185)))) then v183=nil;while true do if (((4706 -3083)<=1957) and (v181==1)) then v93[v182 + (3 -2) ]=v183;v93[v182]=v183[v95[6 -(2 + 0) ]];break;end if ((4412==(1633 + 1523 + 1256)) and (v181==(0 + 0))) then v182=v95[2 + 0 ];v183=v93[v95[3]];v181=1;end end break;end end elseif (((2362 -(304 + 308))>=(207 + 472 + 163)) and (v96>(49 -24))) then if (((8581 -4209)>(3730 -(446 + 1434))) and (v93[v95[1285 -(1040 + (1657 -(1001 + 413))) ]]==v95[4])) then v81=v81 + (2 -1) ;else v81=v95[1850 -(559 + 1288) ];end else v93[v95[2]]={};end elseif (((2163 -((1357 -748) + 1322))<(1275 -(13 + 441))) and (v96<=30)) then if (((1935 -(2299 -(244 + 638)))<(2362 -1460)) and (v96<=(139 -111))) then if (((112 + 2882)>((3809 -(627 + 66)) -2258)) and (v96==(10 + 17))) then local v184=0 + 0 ;local v185;local v186;local v187;while true do if ((v184==0) or ((11143 -7388)<=915)) then v185=0;v186=nil;v184=1;end if (((2160 + 1786)>(6883 -(9356 -6216))) and ((1 + 0)==v184)) then v187=nil;while true do if ((0==v185) or ((743 + 592)>=3306)) then v186=0 + (602 -(512 + 90)) ;v187=nil;v185=1 + 0 ;end if (((4740 + 104)>(2686 -(153 + 280))) and (v185==(2 -1))) then while true do if (((406 + 46)==(179 + 273)) and (0==v186)) then v187=v95[2 + 0 ];v93[v187]=v93[v187](v13(v93,v187 + 1 + 0 ,v95[3]));break;end end break;end end break;end end else v93[v95[2 + 0 ]]();end elseif ((v96==(43 -14)) or ((2817 + 1740)<(2754 -(89 + 578)))) then if ((3874==(2768 + 1106)) and (v93[v95[3 -1 ]]==v93[v95[(2959 -(1665 + 241)) -((1289 -(373 + 344)) + 477) ]])) then v81=v81 + 1 + 0 ;else v81=v95[2 + 1 ];end elseif ((v93[v95[1 + 1 ]]~=v93[v95[90 -(38 + 46 + 2) ]]) or ((513 + 1425)>(8133 -3198))) then v81=v81 + 1 ;else v81=v95[3];end elseif ((v96<=((63 -39) + (13 -5))) or (((6196 -(35 + 1064)) -(497 + 345))<(88 + 3335))) then if (((246 + 1208)<=((2783 + 1041) -(605 + (1557 -829)))) and (v96>31)) then v93[v95[1 + 1 + 0 ]]=v93[v95[3]];else v93[v95[2]][v95[6 -3 ]]=v95[1 + 3 ];end elseif ((v96<=33) or ((15369 -11212)<=2803)) then v93[v95[2 + (1236 -(298 + 938)) ]]=v95[3]~=(0 -0) ;elseif (((3665 + 1188)>=2982) and (v96>(523 -(457 + 32)))) then local v204=0;local v205;local v206;local v207;while true do if (((1754 + 2380)>(4759 -(832 + 570))) and ((1 + 0)==v204)) then v207=nil;while true do if ((v205==(1 + 0)) or ((12091 -8674)<(1221 + 1313))) then while true do if ((v206==(796 -(588 + 208))) or ((7336 -4614)<=164)) then v207=v95[1802 -((2143 -(233 + 1026)) + 916) ];do return v13(v93,v207,v207 + v95[(1672 -(636 + 1030)) -(2 + 1) ] );end break;end end break;end if (((0 + 0)==v205) or ((3061 -(232 + 421))<(3998 -(1569 + 320)))) then v206=0;v207=nil;v205=1 + 0 ;end end break;end if (((0 + 0)==v204) or ((110 -77)==(2060 -(316 + 283 + 6)))) then v205=0;v206=nil;v204=2 -1 ;end end else v93[v95[2]]=v58[v95[1 + 2 ]];end v81=v81 + (1454 -(666 + 787)) ;break;end if ((v104==0) or (443>=(4440 -(360 + 65)))) then v95=v87[v81];v96=v95[1 + 0 ];v104=1;end end end end v80=3;end if (v80==1) then v83={...};v84=v12("#",...) -1 ;v80=2;end end end;end if (v60==0) then v61=v57[1];v62=v57[2];v60=1;end end end return v30(v29(),{},v17)(...);end if (v18==1) then v21=nil;function v21(v64,v65,v66)if v66 then local v71=(v64/((1 + 1)^(v65-(1 + 0))))%(((86 + 137) -(55 + 166))^(((v66-1) -(v65-(1 + 0 + 0))) + 1 + 0)) ;return v71-(v71%1) ;else local v72=0 -0 ;local v73;while true do if (v72==(297 -(36 + (1544 -(1035 + 248))))) then v73=2^(v65-(1 -0)) ;return (((v64%(v73 + v73))>=v73) and (1369 -((55 -(20 + 1)) + 1334))) or (0 + 0) ;end end end end v22=nil;v18=2;end end end vv9(),...);end
