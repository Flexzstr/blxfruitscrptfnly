do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v68=v2(v0(v30,16));if v19 then local v77=v5(v68,v19);v19=nil;return v77;else return v68;end end end);local function v20(v31,v32,v33)if v33 then local v69=0 -0 ;local v70;while true do if (v69==(1702 -(1426 + 276))) then v70=(v31/((2 + 0)^(v32-(1 + 0))))%((4 -2)^(((v33-(1738 -(947 + 790))) -(v32-(1846 -(1808 + 18 + 19)))) + 1 + 0)) ;return v70-(v70%(749 -(588 + 160))) ;end end else local v71=(9 -7)^(v32-(3 -2)) ;return (((v31%(v71 + v71))>=v71) and 1) or (0 -0) ;end end local function v21()local v38=1381 -(798 + 583) ;local v39;while true do if (v38==(1029 -(867 + 162))) then v39=v1(v16,v18,v18);v18=v18 + (2 -1) ;v38=(1332 -(877 + 451)) -3 ;end if (v38==(1397 -(1171 + 225))) then return v39;end end end local function v22()local v40,v41=v1(v16,v18,v18 + (1369 -(346 + 1021)) );v18=v18 + (5 -3) ;return (v41 * (1482 -(165 + 1061))) + v40 ;end local function v23()local v42,v43,v44,v45=v1(v16,v18,v18 + (8 -5) );v18=v18 + ((559 -(316 + 238)) -(1015 -(419 + 595))) ;return (v45 * (16778276 -(835 + 225))) + (v44 * (246310 -180774)) + (v43 * 256) + v42 ;end local function v24()local v46=0 -(0 -0) ;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v46==((4828 -3160) -(1524 + 142))) then v51=v20(v48,202 -((1282 -(264 + 840)) + (285 -(69 + 213))) ,(137 -76) -30 );v52=((v20(v48,80 -48 )==(856 -(191 + (1650 -(503 + 483))))) and  -1) or (1 + 0) ;v46=1368 -(1260 + 105) ;end if (v46==(308 -(297 + 8))) then if (v51==(1578 -(360 + (2706 -(1130 + 358))))) then if (v50==(0 -0)) then return v52 * (0 + 0) ;else local v96=0 + (0 -0) ;while true do if ((0 -0)==v96) then v51=1225 -(755 + 469) ;v49=420 -(115 + 305) ;break;end end end elseif (v51==(1553 + 494)) then return ((v50==(914 -(766 + 148))) and (v52 * ((4 -3)/(0 -0)))) or (v52 * NaN) ;end return v8(v52,v51-(2054 -(749 + 282)) ) * (v49 + (v50/((7 -5)^52))) ;end if (v46==(0 + 0)) then v47=v23();v48=v23();v46=1 + 0 ;end if (v46==(465 -(233 + 231))) then v49=1 -0 ;v50=(v20(v48,2 -(1 -0) ,20) * ((1 + 1)^(16 + 16))) + v47 ;v46=3 -1 ;end end end local function v25(v34)local v53;if  not v34 then v34=v23();if (v34==0) then return "";end end v53=v3(v16,v18,(v18 + v34) -(3 -2) );v18=v18 + v34 ;local v54={};for v66=1 + 0 , #v53 do v54[v66]=v2(v1(v3(v53,v66,v66)));end return v6(v54);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55==(4 -2)) then v60=nil;v61=nil;v55=2 + 1 ;end if (v55~=3) then else v62=nil;while true do local v78=0;local v79;while true do if ((569 -(167 + 402))~=v78) then else v79=1619 -(483 + 1136) ;while true do if (v79~=(1 + 0)) then else if ((0 -0)==v56) then v57={};v58={};v59={};v60={v57,v58,nil,v59};v56=1;end break;end if (v79==0) then local v101=0;while true do if (v101==0) then if (v56==(2 -0)) then local v104=0 + 0 ;while true do if (v104~=(1 -0)) then else for v107=1,v23() do v59[v107]=v23();end return v60;end if (v104==(1527 -(519 + 1008))) then for v109=1 + 0 ,v23() do local v110=0;local v111;local v112;local v113;while true do if (v110==(629 -(308 + 320))) then v113=nil;while true do if (v111~=(1 -0)) then else while true do if (v112==0) then v113=v21();if (v20(v113,1 + 0 ,1 + 0 )==0) then local v205=0;local v206;local v207;local v208;local v209;while true do if (v205==2) then while true do if (1==v206) then local v249=0;while true do if (v249~=(0 + 0)) then else v209={v22(),v22(),nil,nil};if (v207==0) then local v271=0;local v272;local v273;while true do if (v271==1) then while true do if (v272~=0) then else v273=0;while true do if (v273==0) then v209[1755 -(224 + 1528) ]=v22();v209[4]=v22();break;end end break;end end break;end if (v271==(0 + 0)) then v272=0;v273=nil;v271=1 -0 ;end end elseif (v207==(1 + 0)) then v209[5 -2 ]=v23();elseif (v207==2) then v209[3]=v23() -((2 + 0)^(15 + 1)) ;elseif (v207~=(1 + 2)) then else local v290=1214 -(842 + 372) ;local v291;local v292;local v293;while true do if (v290~=(1691 -(86 + 1604))) then else v293=nil;while true do if (v291==1) then while true do if (v292~=(0 -0)) then else v293=0;while true do if (v293~=(1061 -(131 + 930))) then else v209[3]=v23() -(2^16) ;v209[4]=v22();break;end end break;end end break;end if (v291~=(0 -0)) then else v292=0;v293=nil;v291=4 -3 ;end end break;end if (v290==(529 -(345 + 184))) then v291=0;v292=nil;v290=1 -0 ;end end end v249=1304 -(73 + 1230) ;end if (v249~=1) then else v206=2;break;end end end if (v206==0) then local v250=943 -(622 + 321) ;local v251;while true do if (v250~=0) then else v251=0;while true do if (v251==(0 -0)) then v207=v20(v113,2,3);v208=v20(v113,7 -3 ,6);v251=1;end if (v251==1) then v206=1;break;end end break;end end end if (v206~=2) then else local v252=0;local v253;while true do if ((0 -0)==v252) then v253=0;while true do if (0~=v253) then else if (v20(v208,1,1 + 0 )==1) then v209[3 -1 ]=v62[v209[3 -1 ]];end if (v20(v208,5 -3 ,4 -2 )==(1 + 0)) then v209[3]=v62[v209[3]];end v253=1215 -(281 + 933) ;end if (1~=v253) then else v206=167 -(41 + 123) ;break;end end break;end end end if (v206==3) then if (v20(v208,1380 -(342 + 1035) ,3)~=1) then else v209[4]=v62[v209[4]];end v57[v109]=v209;break;end end break;end if (v205==1) then v208=nil;v209=nil;v205=1279 -(825 + 452) ;end if (v205~=(0 + 0)) then else local v238=0 -0 ;while true do if (v238~=0) then else v206=0 + 0 ;v207=nil;v238=1 + 0 ;end if ((3 -2)==v238) then v205=1 + 0 ;break;end end end end end break;end end break;end if (v111~=(0 -0)) then else local v169=0 -0 ;while true do if (0~=v169) then else v112=0;v113=nil;v169=1;end if (v169~=(1 -0)) then else v111=1;break;end end end end break;end if (v110~=(0 + 0)) then else v111=1475 -(494 + 981) ;v112=nil;v110=1 + 0 ;end end end for v114=1 + 0 ,v23() do v58[v114-(1 + 0) ]=v28();end v104=823 -(696 + 126) ;end end end if (1~=v56) then else local v105=0 -0 ;while true do if (v105~=0) then else v61=v23();v62={};v105=1;end if (2==v105) then v56=5 -3 ;break;end if (v105~=1) then else for v116=1,v61 do local v117=0 -0 ;local v118;local v119;local v120;while true do if (v117==0) then v118=1304 -(584 + 720) ;v119=nil;v117=1 + 0 ;end if (v117~=1) then else v120=nil;while true do if (v118~=1) then else if (v119==1) then v120=v21()~=(162 -(59 + 103)) ;elseif (v119==(6 -4)) then v120=v24();elseif (v119~=(3 + 0)) then else v120=v25();end v62[v116]=v120;break;end if (v118~=(0 -0)) then else local v171=0;while true do if (v171==0) then v119=v21();v120=nil;v171=1 + 0 ;end if (v171~=(2 -1)) then else v118=2 -1 ;break;end end end end break;end end end v60[1215 -(1064 + 148) ]=v21();v105=2;end end end v101=1 + 0 ;end if (v101~=1) then else v79=1 -0 ;break;end end end end break;end end end break;end if (0==v55) then v56=0 + 0 ;v57=nil;v55=1 + 0 ;end if (v55==(1 + 0)) then v58=nil;v59=nil;v55=2;end end end local function v29(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v12("#",...) -1 ;local function v76()local v80=v63;local v81=v64;local v82=v65;local v83=v27;local v84={};local v85={};local v86={};for v92=623 -(337 + 286) ,v75 do if (((2081 -805)<=(503 + 906)) and (v92>=v82)) then v84[v92-v82 ]=v74[v92 + 1 ];else v86[v92]=v74[v92 + 1 ];end end local v87=(v75-v82) + 1 + 0 + 0 ;local v88;local v89;while true do local v93=0 + 0 ;local v94;local v95;while true do if ((v93==(0 + 0)) or ((876 + 2060)<=(2164 -(30 + 394)))) then v94=0;v95=nil;v93=2 -1 ;end if ((((7169 -(542 + 61)) -(1553 + 401))>=((8624 -4428) -(22 + 832))) and (v93==1)) then while true do if ((v94==(849 -(680 + 169))) or ((5954 -(516 + 1147))==(4781 -(1125 + 250)))) then v95=0 + 0 ;while true do if ((v95==(1075 -(758 + 316))) or ((1707 + (4585 -(754 + 964)))==((11858 -(791 + 1021)) -5873))) then if (((244 + 180 + 485)==(2522 -1613)) and (v89<=17)) then if ((209<=(1142 + 2764)) and (v89<=(7 + 1))) then if (((3240 -(298 + (1936 -(954 + 603))))==(945 + 1618)) and (v89<=((1833 -(228 + 1597)) -5))) then if ((v89<=(1 -0)) or ((7311 -5280)>3312)) then if ((v89>(395 -(177 + 218))) or ((843 + 436)>(11794 -7527))) then v72=v88[872 -(637 + (310 -78)) ];else v86[v88[2 + 0 ]]={};end elseif ((v89>(2 + 0)) or (3857<=(303 + 389))) then if (v86[v88[1 + 1 + (0 -0) ]] or ((965 + 122 + 608)>(5146 -2600))) then v72=v72 + (4 -3) ;else v72=v88[1185 -(151 + 1031) ];end else v86[v88[2]]();end elseif ((v89<=5) or ((3553 -(14 + (373 -210)))<2938)) then if ((v89>4) or (4468<4258)) then if (((5173 -(369 + (346 -(102 + 208))))>(151 + 3999)) and (v88[1349 -(59 + 860 + 428) ]==v86[v88[(10 -3) -3 ]])) then v72=v72 + 1 + 0 ;else v72=v88[54 -(31 + 20) ];end else v86[v88[2]]=v36[v88[3]];end elseif ((v89<=(1386 -(1320 + 60))) or ((786 + 1204)>=(5817 -2600))) then v86[v88[2]]=v86[v88[2 + 1 ]] + v86[v88[18 -(1351 -(701 + 636)) ]] ;elseif ((4554<(2908 + 1927)) and (v89==(29 -(4 + 18)))) then v86[v88[5 -3 ]]=v86[v88[1 + 2 ]][v88[1566 -(1489 + 73) ]];else v86[v88[2 -0 ]]=v86[v88[3]] * v86[v88[4]] ;end elseif ((1643<(6704 -4947)) and (v89<=12)) then if ((v89<=(27 -17)) or ((9066 -5427)<(3762 -(306 + 1481)))) then if ((v89==(14 -5)) or ((161 + 118)>(5455 -3264))) then for v172=v88[7 -(107 -(96 + 6)) ],v88[2 + 1 ] do v86[v172]=nil;end else v86[v88[1 + 1 ]]=v86[v88[3]];end elseif ((v89>(32 -21)) or (1005>(5161 -(323 + 115)))) then v86[v88[5 -3 ]]=v37[v88[8 -5 ]];elseif ( not v86[v88[1601 -(390 + 1209) ]] or (4452<=(234 + 158))) then v72=v72 + 1 ;else v72=v88[6 -3 ];end elseif (((936 + 1702)<(4201 + 159)) and (v89<=(2 + 12))) then if ((((2342 -(1021 + 544)) + 1054)<=3027) and (v89>(30 -(26 -9)))) then v37[v88[3 + 0 ]]=v86[v88[5 -3 ]];else local v134=(1436 -(932 + 104)) -(273 + 127) ;local v135;local v136;while true do if ((3685>((1135 -236) -(141 + (1302 -(929 + 164))))) and (v134==(1850 -(1144 + 706)))) then v135=0 + 0 ;v136=nil;v134=(1 + 0) -0 ;end if (((2043 -705)>=(1427 -944)) and (v134==(1959 -(635 + 1323)))) then while true do if ((v135==0) or ((2127 -(436 + 15))<(166 + (1648 -482)))) then v136=v88[4 -2 ];v86[v136]=v86[v136](v13(v86,v136 + 1 + 0 ,v73));break;end end break;end end end elseif (((12399 -7985)>=2645) and (v89<=(6 + 9))) then local v137=(0 + 0) -0 ;local v138;while true do if ((v137==(0 -0)) or ((106 + 338)>=(975 + 2468))) then v138=v88[7 -5 ];v86[v138](v13(v86,v138 + (2 -1) ,v88[3]));break;end end elseif ((2433>(352 + 1884)) and (v89>(8 + 8))) then v86[v88[2]]=v88[3];else v86[v88[2]][v88[704 -(135 + 566) ]]=v88[8 -4 ];end elseif ((v89<=(514 -(431 + 57))) or ((1618 -(154 + 268))>1821)) then if ((v89<=(47 -26)) or ((568 + 1309)>=(3014 -(261 + 425)))) then if (((683 + 2647)<(5471 -(986 + (2848 -(1766 + 156))))) and (v89<=(2 + 17))) then if (((12542 -7888)>2698) and (v89>(68 -50))) then v86[v88[2 -0 ]]=v29(v81[v88[9 -6 ]],nil,v37);else local v140=0;local v141;local v142;local v143;while true do if (((5090 -2814)<(4723 -(155 + 95))) and (v140==(1 + 0))) then v143=nil;while true do if (((1873 -((1042 -(43 + 121)) + 106))<=(7 + 1523)) and (v141==(1 + 0))) then for v218=3 -(542 -(361 + 179)) , #v85 do local v219=0 + 0 ;local v220;local v221;while true do if ((((1122 + 339) -(170 + 793))==(33 + 465)) and (v219==((1779 -(1303 + 476)) + 0))) then v220=549 -(391 + 158) ;v221=nil;v219=1 + 0 ;end if ((v219==(919 -(653 + 265))) or (((694 + 5002) -(909 + 43))<=(2769 -(358 + 999)))) then while true do if ((3872>=(5712 -3124)) and (v220==((680 -(60 + 620)) + 0))) then v221=v85[v218];for v263=0 -0 , #v221 do local v264=0 -0 ;local v265;local v266;local v267;local v268;while true do if (((701 -259)>423) and ((2 -1)==v264)) then v267=nil;v268=nil;v264=3 -1 ;end if (((8394 -4993)>(162 + 144)) and (v264==(947 -(427 + 518)))) then while true do if ((0==v265) or ((373 -262)>=(362 + 690))) then v266=v221[v263];v267=v266[102 -(66 + 35) ];v265=1 + 0 ;end if (((1810 -(549 + 609))<(5953 -(1568 + 45))) and (v265==(2 -(1 + 0)))) then v268=v266[2];if ((748<=(9697 -6296)) and (v267==v86) and (v268>=v142)) then local v288=0;local v289;while true do if ((3740==(4670 -(881 + 49))) and (v288==(945 -(795 + 150)))) then v289=0 -0 ;while true do if (((1754 + 1512)==(1821 + 1445)) and (v289==(1254 -(859 + 395)))) then v143[v268]=v267[v268];v266[(1783 -(479 + 60)) -(481 + 762) ]=v143;break;end end break;end end end break;end end break;end if ((v264==0) or (((1513 -783) + 1646)>(5736 -(1232 + (1197 -(409 + 445)))))) then v265=459 -(178 + 281) ;v266=nil;v264=1 + (0 -0) ;end end end break;end end break;end end end break;end if (((1258 + 260)==1518) and (v141==(1320 -(866 + 454)))) then local v212=(1906 -758) -(599 + 549) ;while true do if (((4328 -2602)>=(2787 -((730 -(117 + 142)) + (1216 -(126 + 428))))) and (1==v212)) then v141=1454 -(981 + 472) ;break;end if ((v212==0) or ((4737 -(6 + 41 + 795))<(11523 -8932))) then v142=v88[1 + 1 ];v143={};v212=1845 -((2482 -(375 + 700)) + 437) ;end end end end break;end if (((2804 + 975)==(5487 -((862 -537) + 1383))) and (v140==0)) then v141=175 -(174 + 1) ;v142=nil;v140=207 -(69 + 137) ;end end end elseif ((v89==(2 + 18)) or ((11130 -7172)<=(2486 + 960))) then v86[v88[2 -0 ]]=v86[v88[52 -(5 + 44) ]] -v86[v88[4]] ;elseif (((4206 -((687 -225) + 1096))<(5734 -(796 + 630))) and (v86[v88[(572 + 137) -(460 + 247) ]]==v86[v88[4]])) then v72=v72 + (1 -(0 + 0)) ;else v72=v88[3];end elseif (((352 -(576 -372))<=(5915 -(831 + 164))) and (v89<=(89 -66))) then if ((v89==(58 -36)) or (469>=(3413 -1085))) then local v145=0 + 0 ;local v146;local v147;local v148;local v149;while true do if ((3074>=1458) and (v145==(1 + 1))) then while true do if ((3205<=(15646 -11175)) and (v146==0)) then local v213=1599 -((809 -228) + 1018) ;while true do if (((16457 -11627)>(87 + 2218)) and (v213==(640 -(304 + 336)))) then v147=0 -0 ;v148=nil;v213=171 -(89 + 81) ;end if ((1==v213) or (1970>3466)) then v146=3 -2 ;break;end end end if ((v146==(1 -0)) or ((3682 + 97)<((3461 + 2299) -2294))) then v149=nil;while true do if (((0 + 0)==v147) or ((12937 -8385)<=(859 + 792))) then local v240=0 -0 ;local v241;while true do if (((1318 -(492 + 120))<=(12679 -8351)) and (v240==(0 + 0))) then v241=0 + 0 ;while true do if ((v241==1) or ((2076 -(909 + 148 + 775))>(2914 -(146 + 33)))) then v147=1 + 0 ;break;end if (((3038 -(1158 + 187))>=(2075 -1243)) and (v241==(0 -0))) then local v270=0 + 0 ;while true do if ((v270==1) or ((1927 -(98 + 186))>(1679 + 1401))) then v241=3 -(5 -3) ;break;end if ((v270==(1593 -(1098 + 495))) or ((2979 + 585)<(3722 -(161 + 1120 + 500)))) then v148=v88[2];v149=v86[v88[(2 -1) + 2 ]];v270=1264 -(236 + 1027) ;end end end end break;end end end if ((v147==(1 + 0 + 0)) or (((3390 + 5177) -6421)<=(1245 -809))) then v86[v148 + (1 -0) ]=v149;v86[v148]=v149[v88[4]];break;end end break;end end break;end if (((22974 -18202)>=(1072 + 1255)) and (v145==0)) then v146=0;v147=nil;v145=1 + 0 ;end if (((5547 -(1191 + 16))<(1313 + 3410)) and (v145==((1858 -(77 + 789)) -(25 + 966)))) then v148=nil;v149=nil;v145=5 -3 ;end end else local v150=0 + 0 ;local v151;local v152;local v153;while true do if ((v150==(1 + 0)) or ((2096 + 4)>=(5553 -2260))) then local v196=0;while true do if ((1808<=(2521 + 1515)) and (v196==(1 + 0))) then v150=2 -0 ;break;end if (((2285 + 1580)<=(5095 -(36 + 239))) and (v196==0)) then v153={};v152=v10({},{__index=function(v222,v223)local v230=1185 -(1068 + 117) ;local v231;local v232;while true do if (((6403 -(1660 + 159))>=(6367 -(1712 + 118))) and (v230==1)) then while true do if (((3984 -2226)>(620 + (640 -(48 + 248)))) and (v231==(204 -(161 + (877 -(174 + 660)))))) then local v269=0 -0 ;while true do if ((v269==(0 + 0)) or ((104 + 1228)>=1360)) then v232=v153[v223];return v232[272 -(186 + 85) ][v232[4 -2 ]];end end end end break;end if ((v230==0) or ((20157 -15275)<3422)) then v231=0 + 0 ;v232=nil;v230=1;end end end,__newindex=function(v224,v225,v226)local v233=0 -0 ;local v234;local v235;local v236;while true do if (((1 + 0 + 0)==v233) or ((1162 -(363 + 160))>(1152 + 1515))) then v236=nil;while true do if ((v234==(1 + 0)) or (2398<=(1622 -((1927 -(41 + 1539)) + 187 + 806)))) then while true do if (((2176 + (966 -713))>(278 -216)) and (v235==(798 -(562 + 236)))) then v236=v153[v225];v236[1 + 0 ][v236[1208 -(719 + 487) ]]=v226;break;end end break;end if (((3289 -((1452 -(70 + 287)) + 850))>=(2708 -(595 + 1081))) and (v234==(0 + 0))) then v235=0 + 0 ;v236=nil;v234=1969 -(1233 + 735) ;end end break;end if (((7747 -5723)>(1046 + 490)) and (v233==(0 + 0))) then v234=(0 -0) -0 ;v235=nil;v233=1;end end end});v196=1;end end end if ((v150==(0 + 0)) or (((23660 -17128) -(1516 + 222))<=((14890 -9536) -(4060 -(68 + 24))))) then v151=v81[v88[3]];v152=nil;v150=(3 -2) + 0 ;end if (((15372 -10439)>=(1048 -(262 + 38))) and (v150==(2 + 0))) then for v201=1505 -(30 + 1474) ,v88[4] do local v202=0 + 0 ;local v203;local v204;while true do if ((4099>=(9055 -6941)) and (v202==(1230 -(348 + 882)))) then v203=195 -(194 + 1) ;v204=nil;v202=1 -0 ;end if (((6701 -1705)>=(177 -(163 -117))) and (v202==(3 -2))) then while true do if (((702 + 358)==(237 + 548 + 275)) and (v203==0)) then local v246=0;while true do if (((1057 + (7629 -5232))==(4815 -1361)) and (v246==(0 -(0 -0)))) then v72=v72 + (1500 -((3137 -(1611 + 334)) + 307)) ;v204=v80[v72];v246=1 -0 ;end if (((14269 -10696)<=4579) and (v246==(1 + 0))) then v203=1 + 0 ;break;end end end if ((v203==(1 + 0)) or (4116<((701 + 7341) -4007))) then if ((v204[1 + 0 ]==(1715 -(384 + 1321))) or ((463 + 2726 + 737)<=(2038 + 510))) then v153[v201-(1 + 0 + 0) ]={v86,v204[274 -(27 + 244) ]};else v153[v201-(1 + 0) ]={v36,v204[9 -6 ]};end v85[ #v85 + (2 -1) ]=v153;break;end end break;end end end v86[v88[7 -5 ]]=v29(v151,v152,v37);break;end end end elseif (((102 + (1336 -501))<(5823 -3394)) and (v89<=(22 + 2))) then local v154=0 -0 ;local v155;while true do if (((5930 -(564 + 676))>=(3781 -(100 + 273))) and (v154==(0 + 0))) then v155=v88[2 + 0 ];v86[v155]=v86[v155](v86[v155 + 1 ]);break;end end elseif ((v89==(12 + 13)) or ((3751 -(214 + 127))<=(4302 -2825))) then local v185=202 -(142 + (1609 -(1429 + 120))) ;local v186;local v187;while true do if (((8109 -4974)<3925) and (v185==(1 -0))) then while true do if (((4908 -1785)==3123) and (v186==0)) then v187=v88[511 -(389 + 120) ];do return v13(v86,v187,v187 + v88[13 -10 ] );end break;end end break;end if (((3273 -(425 + 1090))<((3293 + 867) -(123 + 265))) and (v185==(1689 -(1287 + 402)))) then v186=0;v187=nil;v185=923 -(195 + 727) ;end end else v86[v88[1498 -(1203 + 293) ]]=v88[1168 -(726 + 439) ]~=(1445 -(472 + 973)) ;end elseif ((v89<=(1167 -(923 + (508 -294)))) or ((9836 -6408)==((2650 -(1694 + 256)) + 280))) then if ((v89<=28) or ((18694 -13716)<(2998 -1487))) then if ((v89>((51 -32) + 8)) or ((733 -(18 + 495))>=(485 + 406))) then v36[v88[3 + 0 ]]=v86[v88[3 -1 ]];else local v158=(0 + 0) -(0 + 0) ;local v159;local v160;local v161;local v162;local v163;while true do if ((v158==(1 -0)) or ((598 + 1960)<(1997 -1351))) then v161=nil;v162=nil;v158=999 -(210 + 787) ;end if (((632 + 4154)>=2432) and (v158==(1386 -(571 + 815)))) then v159=0 -0 ;v160=nil;v158=1 + (1243 -(1046 + 197)) ;end if (((1294 + 2516)>(7131 -4726)) and (v158==(2 + (0 -0)))) then v163=nil;while true do if (((4395 -(28 + 496))==3871) and (v159==(0 -(0 -0)))) then local v214=1129 -((1685 -1015) + 459) ;while true do if ((v214==(877 -(557 + 319))) or ((1563 + 2766)<515)) then v159=3 -2 ;break;end if ((v214==(0 -0)) or ((2735 -662)>4197)) then v160=v88[1 + 1 ];v161,v162=v83(v86[v160](v13(v86,v160 + 1 + 0 ,v88[3 + 0 ])));v214=1;end end end if ((v159==(1 + 1)) or ((1342 -600)>(5745 -(60 + 902)))) then for v227=v160,v73 do local v228=0 -(0 + 0) ;local v229;while true do if ((v228==(0 + 0)) or (90==((9148 -(142 + 925)) -3628))) then v229=699 -(215 + 484) ;while true do if ((v229==((211 -(106 + 105)) -0)) or (3728==(3365 -(112 + 1372)))) then v163=v163 + 1 ;v86[v227]=v161[v163];break;end end break;end end end break;end if ((2318<=(14609 -9729)) and (v159==(1 + 0))) then local v215=(187 + 1281) -(918 + 550) ;while true do if ((v215==(1880 -(1582 + 298))) or ((4105 -1957)>=4763)) then v73=(v162 + v160) -(1 + 0) ;v163=0 + 0 ;v215=131 -(84 + 46) ;end if (((630 + 2654)<((2712 -1001) + (3251 -(893 + 333)))) and (v215==1)) then v159=2;break;end end end end break;end end end elseif (((725 + 3326)>(2201 -(202 + 497))) and (v89==29)) then if (((973 + 3064)>=(250 + (1235 -(435 + 302)))) and (v86[v88[894 -((1440 -(317 + 699)) + 468) ]]~=v86[v88[4]])) then v72=v72 + 1 + 0 ;else v72=v88[3 + 0 ];end else local v164=0 -0 ;local v165;local v166;while true do if (((10073 -5239)>=(1221 + 610)) and (v164==(16 -(10 + (16 -10))))) then v165=1297 -(429 + 868) ;v166=nil;v164=1;end if ((1==v164) or ((12044 -7779)<=((843 + 6580) -3714))) then while true do if (((1525 -457)<(2213 -(636 + 206))) and (v165==0)) then v166=v88[2 -0 ];v86[v166]=v86[v166](v13(v86,v166 + 1 ,v88[2 + 1 ]));break;end end break;end end end elseif ((1740>=(141 + 314)) and (v89<=(7 + 25))) then if ((v89==(171 -(50 + 90))) or ((8388 -5891)<=2144)) then do return v86[v88[1135 -(322 + 811) ]];end else v86[v88[(2364 -(212 + 217)) -(840 + 1093) ]][v88[2 + 1 ]]=v86[v88[1642 -(870 + 768) ]];end elseif ((((78855 -55759) -(48189 -29760))>452) and (v89<=(81 -48))) then if ((v86[v88[1 + 1 ]]==v88[4]) or (4771==3876)) then v72=v72 + (610 -(117 + 492)) ;else v72=v88[8 -5 ];end elseif ((v89>(15 + 19)) or ((12020 -8429)>=4851)) then local v191=0 + 0 ;local v192;local v193;local v194;while true do if ((v191==(1 -0)) or ((504 -146)>=(4782 -(297 + 1246)))) then v194=nil;while true do if ((v192==(0 + 0)) or (2442>=(4896 -1992))) then v193=1082 -(1044 + 38) ;v194=nil;v192=1;end if (((1708 -(855 + 852))==v192) or (1243==(3005 -(9 + (553 -264))))) then while true do if (((2 + 2 + 597)>=(147 + (1088 -799))) and (v193==(0 -0))) then v194=v88[1 + 1 ];v86[v194](v86[v194 + ((1 + 1) -1) ]);break;end end break;end end break;end if (((2347 -(104 + 382))<(2689 + 79)) and (v191==(0 -0))) then v192=0 -0 ;v193=nil;v191=1 -0 ;end end else do return;end end v72=v72 + (3 -2) ;break;end if ((742<=(13833 -(25350 -16151))) and (v95==(0 + 0))) then local v102=(2514 -1478) -(349 + 687) ;local v103;while true do if ((v102==(1497 -(657 + 840))) or (3615<=1159)) then v103=1231 -(790 + 441) ;while true do if (((2297 -(51 + 252))==(2881 -887)) and (v103==(1 + 0))) then v95=1 + 0 ;break;end if (((435 -(44 + 55))<(4839 -2467)) and (v103==(1846 -(395 + 1451)))) then v88=v80[v72];v89=v88[284 -(96 + 187) ];v103=1 + 0 ;end end break;end end end end break;end end break;end end end end A,B=v27(v11(v76));if  not A[1] then local v90=0;local v91;while true do if (0==v90) then v91=v35[4][v72] or "?" ;error("Script error at ["   .. v91   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
